<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      
        <title>vue2使用easywasmplayer实现视频流播放</title>
      
      <link href="/2023/10/21/vue2%E4%BD%BF%E7%94%A8easywasmplayer%E5%AE%9E%E7%8E%B0%E8%A7%86%E9%A2%91%E6%B5%81%E6%92%AD%E6%94%BE/"/>
      <url>/2023/10/21/vue2%E4%BD%BF%E7%94%A8easywasmplayer%E5%AE%9E%E7%8E%B0%E8%A7%86%E9%A2%91%E6%B5%81%E6%92%AD%E6%94%BE/</url>
      
        <content type="html"><![CDATA[<p>vue2 使用 easywasmplayer 实现视频流播放</p><h4 id="一、介绍"><a href="#一、介绍" class="headerlink" title="一、介绍"></a>一、介绍</h4><p>EasyPlayer.js H5 播放器，是一款能够同时支持 HTTP、RTMP、HTTP-FLV、HLS（m3u8）视频直播与视频点播等多种协议，支持 H.264、H.265、AAC 等多种音视频编码格式，支持 mse、wasm 等多种解码方式，支持 Windows、Linux、Android、iOS 全平台终端的 H5 播放器。</p><h4 id="二、vue2-组件使用"><a href="#二、vue2-组件使用" class="headerlink" title="二、vue2 组件使用"></a>二、vue2 组件使用</h4><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">import</span> WasmPlayer <span class="token keyword">from</span> <span class="token string">"@easydarwin/easywasmplayer"</span><span class="token punctuation">;</span>methods<span class="token punctuation">:</span> <span class="token punctuation">{</span>    <span class="token function">ElWasmPlayer</span><span class="token punctuation">(</span>id<span class="token punctuation">,</span> url<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// 实例化播放器</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>player <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">WasmPlayer</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> id<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>callbackfun<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 调用播放</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>player<span class="token punctuation">.</span><span class="token function">play</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token comment" spellcheck="true">//播放事件回调</span>    <span class="token function">callbackfun</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'callbackfun'</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> vue2 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      
        <title>其他部分demo</title>
      
      <link href="/2023/10/16/projects/%E5%85%B6%E4%BB%96%E9%83%A8%E5%88%86%E5%B0%8F%E9%A1%B9%E7%9B%AE/"/>
      <url>/2023/10/16/projects/%E5%85%B6%E4%BB%96%E9%83%A8%E5%88%86%E5%B0%8F%E9%A1%B9%E7%9B%AE/</url>
      
        <content type="html"><![CDATA[<p>课程的部分设计、小项目及demo</p><h3 id="1-测量学课程设计（C-ArcEngine、C-Gdal）"><a href="#1-测量学课程设计（C-ArcEngine、C-Gdal）" class="headerlink" title="1. 测量学课程设计（C#+ArcEngine、C#+Gdal）"></a>1. 测量学课程设计（C#+ArcEngine、C#+Gdal）</h3><p>主要内容：</p><ul><li>原始测量数据录入、角度闭合、附合导线计算、水准闭合、附合导线计算、碎部点计算；</li><li>Identify功能的实现；</li><li>基于经纬度坐标成图功能的实现；</li><li>C#+Gdal实现插值、水体识别；</li><li>C#+Teigha实现CAD数据读取；</li></ul><p>示意图：</p><div align=center><img src="https://raw.githubusercontent.com/FallonXC/blogImg/main/image-20231016094656595.png" alt="系统页面" width="450"><img src="https://raw.githubusercontent.com/FallonXC/blogImg/main/20231016095012.png" alt="成图" width="500"></div><div align=center><img src="https://raw.githubusercontent.com/FallonXC/blogImg/main/20231016095202.png" alt="水体识别" width="500"></div><h3 id="2-三维实景模型前端可视化系统（Node-js）"><a href="#2-三维实景模型前端可视化系统（Node-js）" class="headerlink" title="2. 三维实景模型前端可视化系统（Node.js）"></a>2. 三维实景模型前端可视化系统（Node.js）</h3><p>主要内容：</p><ul><li>基于Node.js的Vue+Express+Cesium前后端分离式开发；</li><li>基于IIS服务器的三维实景模型的发布；</li></ul><p>示意图：</p><div align=center><img src="https://raw.githubusercontent.com/FallonXC/blogImg/main/20231016101633.png" alt="系统页面" width="900"></div><div align=center><img src="https://raw.githubusercontent.com/FallonXC/blogImg/main/20231016101849.png" alt="系统功能" width="900"></div><h3 id="3-校园空气质量监测与预警系统"><a href="#3-校园空气质量监测与预警系统" class="headerlink" title="3. 校园空气质量监测与预警系统"></a>3. 校园空气质量监测与预警系统</h3><p>主要内容：</p><ul><li>支持地图浏览、图层切换等基础功能；</li><li>支持账户登录、注册、管理；</li><li>获取广州大学各个点的监测数据、平均温度热力图等；</li><li>管理员后台数据删改功能；</li></ul><p>示意图：</p><div align=center><img src="https://raw.githubusercontent.com/FallonXC/blogImg/main/image-20231016101951634.png" alt="系统功能" width="900"></div><div align=center><img src="https://raw.githubusercontent.com/FallonXC/blogImg/main/20231016102122.png" alt="系统功能" width="900"></div><h3 id="4-Arcpy气象数据时间序列差值比较工具（python）"><a href="#4-Arcpy气象数据时间序列差值比较工具（python）" class="headerlink" title="4. Arcpy气象数据时间序列差值比较工具（python）"></a>4. Arcpy气象数据时间序列差值比较工具（python）</h3><p>工具描述：用于分析两个统计年份之间某一地区的降水差异，直观看出区域的时间序列变化差异及强度；</p><ul><li>Excel表转shapefile函数、插值处理函数、栅格求差运算函数、栅格重分类函数；</li><li>面积分区统计、降水平均值统计；</li></ul><p>示意图：</p><div align=center><img src="https://raw.githubusercontent.com/FallonXC/blogImg/main/20231016102533.png" alt="系统功能" width="900"></div><div align=center>    <img src="https://raw.githubusercontent.com/FallonXC/blogImg/main/20231016102808.png" alt="系统功能" width="600">    <img src="https://raw.githubusercontent.com/FallonXC/blogImg/main/20231016102722.png" alt="系统功能" width="400"></div><h3 id="5-广州市景点打卡APP（Java-Android-PostgreSQL）"><a href="#5-广州市景点打卡APP（Java-Android-PostgreSQL）" class="headerlink" title="5. 广州市景点打卡APP（Java+Android+PostgreSQL）"></a>5. 广州市景点打卡APP（Java+Android+PostgreSQL）</h3><p>主要内容：</p><ul><li>实现打卡功能、景点展示功能、历史打卡展示功能；</li></ul><p>示意图：</p><div align=center><img src="https://raw.githubusercontent.com/FallonXC/blogImg/main/20231016103248.png" alt="系统功能" width="300"></div><h3 id="6-车牌识别程序（C-Gdal）"><a href="#6-车牌识别程序（C-Gdal）" class="headerlink" title="6. 车牌识别程序（C#+Gdal）"></a>6. 车牌识别程序（C#+Gdal）</h3><p>主要内容：</p><ul><li>大津法阈值二值化；</li><li>边缘识别及车牌定位算法；</li><li>字符识别算法；</li></ul><p>示意图：</p><div align=center><img src="https://raw.githubusercontent.com/FallonXC/blogImg/main/20231016104050.png" alt="系统功能" width="900"></div>]]></content>
      
      
      <categories>
          
          <category> demo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 项目 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      
        <title>VS2019+PCL+LAS点云学习</title>
      
      <link href="/2023/10/12/VS2019+PCL+LAS%E7%82%B9%E4%BA%91%E5%AD%A6%E4%B9%A0/"/>
      <url>/2023/10/12/VS2019+PCL+LAS%E7%82%B9%E4%BA%91%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<p>VS2019+PCL+LAS点云学习教程、基本代码</p><h2 id="部分教程汇总"><a href="#部分教程汇总" class="headerlink" title="部分教程汇总"></a>部分教程汇总</h2><h5 id="安装教程"><a href="#安装教程" class="headerlink" title="安装教程"></a>安装教程</h5><ol><li>win10系统下 VS2019点云库PCL1.12.0的安装与配置：<a href="https://blog.csdn.net/Nelson_Leo/article/details/118600787?spm=1001.2101.3001.6650.1&utm_medium=distribute.pc_relevant.none-task-blog-2~default~CTRLIST~Rate-1-118600787-blog-118568577.pc_relevant_default&depth_1-utm_source=distribute.pc_relevant.none-task-blog-2~default~CTRLIST~Rate-1-118600787-blog-118568577.pc_relevant_default&utm_relevant_index=2">https://blog.csdn.net/Nelson_Leo&#x2F;article&#x2F;details&#x2F;118600787</a></li><li>PCL点云库安装及学习（2021.7.28）：<a href="https://blog.csdn.net/jing_zhong/article/details/118696089">https://blog.csdn.net/jing_zhong/article/details/118696089</a></li><li>PCL安装教程(Win10+vs2019+PCL1.10.1)：<a href="https://blog.csdn.net/weixin_43403569/article/details/118568577">https://blog.csdn.net/weixin_43403569/article/details/118568577</a></li><li>VS2019+pcl1.12.1配置详解：<a href="https://blog.csdn.net/biubiubiu011/article/details/127160201">https://blog.csdn.net/biubiubiu011/article/details/127160201</a></li><li>Gitee上传、更新仓库代码：<a href="https://blog.csdn.net/qq_38697586/article/details/128185549">https://blog.csdn.net/qq_38697586/article/details/128185549</a></li></ol><h5 id="其他教程"><a href="#其他教程" class="headerlink" title="其他教程"></a>其他教程</h5><ol><li><p>pcl生成三个点连线，画箭头，画圆，改线条颜色：<a href="https://blog.csdn.net/qq_41092406/article/details/114041229">https://blog.csdn.net/qq_41092406/article/details/114041229</a></p></li><li><p>计算空间中点到直线的距离：<a href="https://blog.csdn.net/qq_37220275/article/details/117954824">https://blog.csdn.net/qq_37220275/article/details/117954824</a></p></li><li><p>三维空间的直线方程：<a href="https://blog.csdn.net/qq_39706570/article/details/105962373">https://blog.csdn.net/qq_39706570/article/details/105962373</a></p></li><li><p>已经两点求直线方程（多维空间）：<a href="https://www.cnblogs.com/yaolin1228/p/7871793.html">https://www.cnblogs.com/yaolin1228/p/7871793.html</a></p></li><li><p>PCL生成线段点云：<a href="https://blog.csdn.net/Dbojuedzw/article/details/126127391">https://blog.csdn.net/Dbojuedzw/article/details/126127391</a></p></li><li><p>【计算几何】多边形点集排序：<a href="https://www.cnblogs.com/dwdxdy/p/3230156.html">https://www.cnblogs.com/dwdxdy/p/3230156.html</a></p></li><li><p>空间点到直线垂足坐标的解算方法：<a href="https://blog.csdn.net/zhouschina/article/details/14647587">https://blog.csdn.net/zhouschina/article/details/14647587</a></p></li><li><p>pcl::compute3DCentroid()计算质心算法原理：</p><p><a href="https://blog.csdn.net/YunLaowang/article/details/102703768">https://blog.csdn.net/YunLaowang/article/details/102703768</a></p><p><a href="https://blog.csdn.net/u014072827/article/details/110746985">https://blog.csdn.net/u014072827/article/details/110746985</a></p></li><li><p>PCL：点云赋色 | 自定义点云中任意一点的颜色：<a href="http://www.taodudu.cc/news/show-3123035.html">http://www.taodudu.cc/news/show-3123035.html</a></p></li><li><p>PCL C++版【学习备忘】：<a href="https://blog.csdn.net/expert_joe/article/details/123342098">https://blog.csdn.net/expert_joe/article/details/123342098</a></p></li></ol><h2 id="点云入门"><a href="#点云入门" class="headerlink" title="点云入门"></a>点云入门</h2><h3 id="功能示例代码段"><a href="#功能示例代码段" class="headerlink" title="功能示例代码段"></a>功能示例代码段</h3><h4 id="1-pcl-PointCloud数据类型"><a href="#1-pcl-PointCloud数据类型" class="headerlink" title="1. pcl::PointCloud数据类型"></a>1. pcl::PointCloud数据类型</h4><ul><li>点云类型</li></ul><pre class="line-numbers language-cpp"><code class="language-cpp"><span class="token comment" spellcheck="true">// 点云指针类型</span>pcl<span class="token operator">::</span>PointCloud<span class="token operator">&lt;</span>pcl<span class="token operator">::</span>PointXYZ<span class="token operator">></span><span class="token operator">::</span>Ptr <span class="token function">cloudPtr</span> <span class="token punctuation">(</span><span class="token keyword">new</span> pcl<span class="token operator">::</span>PointCloud<span class="token operator">&lt;</span>pcl<span class="token operator">::</span>PointXYZ<span class="token operator">></span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 点云对象</span>pcl<span class="token operator">::</span>PointCloud<span class="token operator">&lt;</span>pcl<span class="token operator">::</span>PointXYZ<span class="token operator">></span> cloud<span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 单个点云的点</span>pcl<span class="token operator">::</span>PointXYZ  point<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>访问形式</li></ul><pre class="line-numbers language-cpp"><code class="language-cpp"><span class="token comment" spellcheck="true">// 访问第一个点的x</span>cloud<span class="token punctuation">.</span>points<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>x<span class="token punctuation">;</span>cloudPtr<span class="token operator">-</span><span class="token operator">></span>points<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>x<span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 访问单个点的x</span>point<span class="token punctuation">.</span>x<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="2-从点云里删除点和添加点"><a href="#2-从点云里删除点和添加点" class="headerlink" title="2. 从点云里删除点和添加点"></a>2. 从点云里删除点和添加点</h4><ul><li>点云增删改查</li></ul><pre class="line-numbers language-cpp"><code class="language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;pcl/io/pcd_io.h></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;pcl/common/impl/io.hpp></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;pcl/point_types.h></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;pcl/point_cloud.h></span></span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span> <span class="token keyword">char</span> <span class="token operator">*</span><span class="token operator">*</span>argv<span class="token punctuation">)</span><span class="token punctuation">{</span>    pcl<span class="token operator">::</span>PointCloud<span class="token operator">&lt;</span>pcl<span class="token operator">::</span>PointXYZ<span class="token operator">></span><span class="token operator">::</span>Ptr <span class="token function">cloud</span><span class="token punctuation">(</span><span class="token keyword">new</span> pcl<span class="token operator">::</span>PointCloud<span class="token operator">&lt;</span>pcl<span class="token operator">::</span>PointXYZ<span class="token operator">></span><span class="token punctuation">)</span><span class="token punctuation">;</span>    pcl<span class="token operator">::</span>io<span class="token operator">::</span>loadPCDFile<span class="token operator">&lt;</span>pcl<span class="token operator">::</span>PointXYZ<span class="token operator">></span><span class="token punctuation">(</span><span class="token string">"bun0.pcd"</span><span class="token punctuation">,</span> <span class="token operator">*</span>cloud<span class="token punctuation">)</span><span class="token punctuation">;</span>    pcl<span class="token operator">::</span>PointCloud<span class="token operator">&lt;</span>pcl<span class="token operator">::</span>PointXYZ<span class="token operator">></span><span class="token operator">::</span>iterator index <span class="token operator">=</span> cloud<span class="token operator">-</span><span class="token operator">></span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 删除点</span>    cloud<span class="token operator">-</span><span class="token operator">></span><span class="token function">erase</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//删除第一个</span>    index <span class="token operator">=</span> cloud<span class="token operator">-</span><span class="token operator">></span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">5</span><span class="token punctuation">;</span>    cloud<span class="token operator">-</span><span class="token operator">></span><span class="token function">erase</span><span class="token punctuation">(</span>cloud<span class="token operator">-</span><span class="token operator">></span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//删除第5个</span>    pcl<span class="token operator">::</span>PointXYZ point <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 添加点</span>    <span class="token comment" spellcheck="true">//在索引号为5的位置1上插入一点，原来的点后移一位</span>    cloud<span class="token operator">-</span><span class="token operator">></span><span class="token function">insert</span><span class="token punctuation">(</span>cloud<span class="token operator">-</span><span class="token operator">></span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">5</span><span class="token punctuation">,</span> point<span class="token punctuation">)</span><span class="token punctuation">;</span>    cloud<span class="token operator">-</span><span class="token operator">></span><span class="token function">push_back</span><span class="token punctuation">(</span>point<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//从点云最后面插入一点</span>    std<span class="token operator">::</span>cout <span class="token operator">&lt;&lt;</span> cloud<span class="token operator">-</span><span class="token operator">></span>points<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">.</span>x<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//输出1</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="3-新建一个点云对象，然后对点云对象进行初始化，并随机赋值"><a href="#3-新建一个点云对象，然后对点云对象进行初始化，并随机赋值" class="headerlink" title="3. 新建一个点云对象，然后对点云对象进行初始化，并随机赋值"></a>3. 新建一个点云对象，然后对点云对象进行初始化，并随机赋值</h4><ul><li>初始化点云</li></ul><pre class="line-numbers language-cpp"><code class="language-cpp">pcl<span class="token operator">::</span>PointCloud<span class="token operator">&lt;</span>pcl<span class="token operator">::</span>PointXYZ<span class="token operator">></span> cloud<span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 创建点云</span>cloud<span class="token punctuation">.</span>width<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">;</span>cloud<span class="token punctuation">.</span>height<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>cloud<span class="token punctuation">.</span>is_dense<span class="token operator">=</span><span class="token boolean">false</span><span class="token punctuation">;</span>cloud<span class="token punctuation">.</span>points<span class="token punctuation">.</span><span class="token function">resize</span><span class="token punctuation">(</span>cloud<span class="token punctuation">.</span>width<span class="token operator">*</span>cloud<span class="token punctuation">.</span>height<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 随机赋值</span><span class="token keyword">for</span><span class="token punctuation">(</span>size_t i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>cloud<span class="token punctuation">.</span>points<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">++</span>i<span class="token punctuation">)</span><span class="token punctuation">{</span>    cloud<span class="token punctuation">.</span>points<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>x<span class="token operator">=</span><span class="token number">1024</span><span class="token operator">*</span><span class="token function">rand</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token punctuation">(</span>RAND_MAX<span class="token operator">+</span><span class="token number">1.0f</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    cloud<span class="token punctuation">.</span>points<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>y<span class="token operator">=</span><span class="token number">1024</span><span class="token operator">*</span><span class="token function">rand</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token punctuation">(</span>RAND_MAX<span class="token operator">+</span><span class="token number">1.0f</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    cloud<span class="token punctuation">.</span>points<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>z<span class="token operator">=</span><span class="token number">1024</span><span class="token operator">*</span><span class="token function">rand</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token punctuation">(</span>RAND_MAX<span class="token operator">+</span><span class="token number">1.0f</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">// 将点云保存为pcd文件</span>pcl<span class="token operator">::</span>io<span class="token operator">::</span><span class="token function">savePCDFileASCII</span><span class="token punctuation">(</span><span class="token string">"test_pcd.pcd"</span><span class="token punctuation">,</span>cloud<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="4-点云可视化基本操作"><a href="#4-点云可视化基本操作" class="headerlink" title="4. 点云可视化基本操作"></a>4. 点云可视化基本操作</h4><ul><li>PCLVisualizer</li></ul><pre class="line-numbers language-cpp"><code class="language-cpp"><span class="token comment" spellcheck="true">// 定义一个显示器</span>pcl<span class="token operator">::</span>visualization<span class="token operator">::</span>PCLVisualizer <span class="token function">viewer</span><span class="token punctuation">(</span><span class="token string">"registration Viewer"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 给点云定义一个颜色 RGB模式  为全G 绿色</span>pcl<span class="token operator">::</span>visualization<span class="token operator">::</span>PointCloudColorHandlerCustom<span class="token operator">&lt;</span>pcl<span class="token operator">::</span>PointXYZ<span class="token operator">></span> <span class="token function">src_h</span><span class="token punctuation">(</span>cloud<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 设置背景颜色  255,255,255就是白色</span>viewer<span class="token punctuation">.</span><span class="token function">setBackgroundColor</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// 把点云加入到显示器里</span>viewer<span class="token punctuation">.</span><span class="token function">addPointCloud</span><span class="token punctuation">(</span>cloud<span class="token punctuation">,</span> <span class="token string">"source cloud"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>点云视窗类：CloudViewer</li></ul><pre class="line-numbers language-cpp"><code class="language-cpp"><span class="token comment" spellcheck="true">// 创建viewer对象</span>pcl<span class="token operator">::</span>visualization<span class="token operator">::</span>CloudViewer <span class="token function">viewer</span><span class="token punctuation">(</span><span class="token string">"Cloud Viewer"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment" spellcheck="true">// 加载点云</span>viewer<span class="token punctuation">.</span><span class="token function">showCloud</span><span class="token punctuation">(</span>cloud<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h4 id="5-点的顺时针、逆时针排序"><a href="#5-点的顺时针、逆时针排序" class="headerlink" title="5. 点的顺时针、逆时针排序"></a>5. 点的顺时针、逆时针排序</h4><ul><li>顺时针</li></ul><pre class="line-numbers language-cpp"><code class="language-cpp"><span class="token comment" spellcheck="true">//若点a大于点b,即点a在点b顺时针方向,返回true,否则返回false</span><span class="token keyword">bool</span> <span class="token function">PointCmp</span><span class="token punctuation">(</span><span class="token keyword">const</span> pcl<span class="token operator">::</span>PointXYZ a<span class="token punctuation">,</span> <span class="token keyword">const</span> pcl<span class="token operator">::</span>PointXYZ b<span class="token punctuation">,</span> <span class="token keyword">const</span> pcl<span class="token operator">::</span>PointXYZ center<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>a<span class="token punctuation">.</span>x <span class="token operator">>=</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> b<span class="token punctuation">.</span>x <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>a<span class="token punctuation">.</span>x <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> b<span class="token punctuation">.</span>x <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> a<span class="token punctuation">.</span>y <span class="token operator">></span> b<span class="token punctuation">.</span>y<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//向量OA和向量OB的叉积</span>    <span class="token keyword">float</span> det <span class="token operator">=</span> <span class="token punctuation">(</span>a<span class="token punctuation">.</span>x <span class="token operator">-</span> center<span class="token punctuation">.</span>x<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span>b<span class="token punctuation">.</span>y <span class="token operator">-</span> center<span class="token punctuation">.</span>y<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token punctuation">(</span>b<span class="token punctuation">.</span>x <span class="token operator">-</span> center<span class="token punctuation">.</span>x<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span>a<span class="token punctuation">.</span>y <span class="token operator">-</span> center<span class="token punctuation">.</span>y<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>det <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>det <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//向量OA和向量OB共线，以距离判断大小</span>    <span class="token keyword">float</span> d1 <span class="token operator">=</span> <span class="token punctuation">(</span>a<span class="token punctuation">.</span>x <span class="token operator">-</span> center<span class="token punctuation">.</span>x<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span>a<span class="token punctuation">.</span>x <span class="token operator">-</span> center<span class="token punctuation">.</span>x<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token punctuation">(</span>a<span class="token punctuation">.</span>y <span class="token operator">-</span> center<span class="token punctuation">.</span>y<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span>a<span class="token punctuation">.</span>y <span class="token operator">-</span> center<span class="token punctuation">.</span>y<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">float</span> d2 <span class="token operator">=</span> <span class="token punctuation">(</span>b<span class="token punctuation">.</span>x <span class="token operator">-</span> center<span class="token punctuation">.</span>x<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span>b<span class="token punctuation">.</span>x <span class="token operator">-</span> center<span class="token punctuation">.</span>y<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token punctuation">(</span>b<span class="token punctuation">.</span>y <span class="token operator">-</span> center<span class="token punctuation">.</span>y<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span>b<span class="token punctuation">.</span>y <span class="token operator">-</span> center<span class="token punctuation">.</span>y<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> d1 <span class="token operator">></span> d2<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">//点集合</span><span class="token keyword">void</span> <span class="token function">sortClockwise</span><span class="token punctuation">(</span>pcl<span class="token operator">::</span>PointXYZ vPoints<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token keyword">int</span> n<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">//计算重心</span>    pcl<span class="token operator">::</span>PointXYZ center<span class="token punctuation">;</span>    <span class="token keyword">double</span> x <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> y <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> z <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        x <span class="token operator">+</span><span class="token operator">=</span> vPoints<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>x<span class="token punctuation">;</span>        y <span class="token operator">+</span><span class="token operator">=</span> vPoints<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>y<span class="token punctuation">;</span>        z <span class="token operator">+</span><span class="token operator">=</span> vPoints<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>z<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    center<span class="token punctuation">.</span>x <span class="token operator">=</span> x <span class="token operator">/</span> n<span class="token punctuation">;</span>    center<span class="token punctuation">.</span>y <span class="token operator">=</span> y <span class="token operator">/</span> n<span class="token punctuation">;</span>    center<span class="token punctuation">.</span>z <span class="token operator">=</span> z <span class="token operator">/</span> n<span class="token punctuation">;</span>    cout <span class="token operator">&lt;&lt;</span> <span class="token string">"center："</span> <span class="token operator">&lt;&lt;</span> center<span class="token punctuation">.</span>x <span class="token operator">&lt;&lt;</span> <span class="token string">","</span> <span class="token operator">&lt;&lt;</span> center<span class="token punctuation">.</span>y <span class="token operator">&lt;&lt;</span> <span class="token string">","</span> <span class="token operator">&lt;&lt;</span> center<span class="token punctuation">.</span>z <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//冒泡排序</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> n <span class="token operator">-</span> i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span>        <span class="token punctuation">{</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">PointCmp</span><span class="token punctuation">(</span>vPoints<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">,</span> vPoints<span class="token punctuation">[</span>j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> center<span class="token punctuation">)</span><span class="token punctuation">)</span>                std<span class="token operator">::</span><span class="token function">swap</span><span class="token punctuation">(</span>vPoints<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">,</span> vPoints<span class="token punctuation">[</span>j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">//return vPoints;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>逆时针、顺时针</li></ul><pre class="line-numbers language-cpp"><code class="language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;pcl/io/pcd_io.h></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;pcl/point_types.h></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;pcl/common/centroid.h></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;pcl/visualization/pcl_visualizer.h></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;pcl/geometry/planar_polygon.h></span></span><span class="token comment" spellcheck="true">//定义多边形</span><span class="token comment" spellcheck="true">// 逆时针排序</span><span class="token keyword">void</span> <span class="token function">CounterClockWiseSortPoints</span><span class="token punctuation">(</span>pcl<span class="token operator">::</span>PointCloud<span class="token operator">&lt;</span>pcl<span class="token operator">::</span>PointXYZ<span class="token operator">></span><span class="token operator">&amp;</span> vPoints<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">int</span> cnt <span class="token operator">=</span> <span class="token keyword">static_cast</span><span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">></span><span class="token punctuation">(</span>vPoints<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>cnt <span class="token operator">&lt;</span> <span class="token number">3</span><span class="token punctuation">)</span>        <span class="token keyword">return</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//计算中心</span>    Eigen<span class="token operator">::</span>Vector4f centroid<span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 质心</span>    pcl<span class="token operator">::</span><span class="token function">compute3DCentroid</span><span class="token punctuation">(</span>vPoints<span class="token punctuation">,</span> centroid<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 齐次坐标，（c0,c1,c2,1）</span>    pcl<span class="token operator">::</span>PointXYZ center<span class="token punctuation">{</span> centroid<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>centroid<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token punctuation">,</span>centroid<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//若点a小于点b,即点a在点b逆时针方向,返回true,否则返回false</span>    <span class="token keyword">auto</span> PointCmp <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token keyword">const</span> pcl<span class="token operator">::</span>PointXYZ<span class="token operator">&amp;</span> a<span class="token punctuation">,</span> <span class="token keyword">const</span> pcl<span class="token operator">::</span>PointXYZ<span class="token operator">&amp;</span> b<span class="token punctuation">,</span> <span class="token keyword">const</span> pcl<span class="token operator">::</span>PointXYZ<span class="token operator">&amp;</span> center<span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>a<span class="token punctuation">.</span>x <span class="token operator">&lt;=</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> b<span class="token punctuation">.</span>x <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span>            <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>a<span class="token punctuation">.</span>x <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> b<span class="token punctuation">.</span>x <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>            <span class="token keyword">return</span> a<span class="token punctuation">.</span>y <span class="token operator">&lt;</span> b<span class="token punctuation">.</span>y<span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//向量OA和向量OB的叉积，向量OA和OB的叉积大于0，则向量OA在向量OB的逆时针方向，即点A小于点B。</span>        <span class="token keyword">float</span> det <span class="token operator">=</span> <span class="token punctuation">(</span>a<span class="token punctuation">.</span>x <span class="token operator">-</span> center<span class="token punctuation">.</span>x<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span>b<span class="token punctuation">.</span>y <span class="token operator">-</span> center<span class="token punctuation">.</span>y<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token punctuation">(</span>b<span class="token punctuation">.</span>x <span class="token operator">-</span> center<span class="token punctuation">.</span>x<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span>a<span class="token punctuation">.</span>y <span class="token operator">-</span> center<span class="token punctuation">.</span>y<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>det <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span>            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>det <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span>            <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//向量OA和向量OB共线，以距离判断大小</span>        <span class="token keyword">float</span> d1 <span class="token operator">=</span> <span class="token punctuation">(</span>a<span class="token punctuation">.</span>x <span class="token operator">-</span> center<span class="token punctuation">.</span>x<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span>a<span class="token punctuation">.</span>x <span class="token operator">-</span> center<span class="token punctuation">.</span>x<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token punctuation">(</span>a<span class="token punctuation">.</span>y <span class="token operator">-</span> center<span class="token punctuation">.</span>y<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span>a<span class="token punctuation">.</span>y <span class="token operator">-</span> center<span class="token punctuation">.</span>y<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">float</span> d2 <span class="token operator">=</span> <span class="token punctuation">(</span>b<span class="token punctuation">.</span>x <span class="token operator">-</span> center<span class="token punctuation">.</span>x<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span>b<span class="token punctuation">.</span>x <span class="token operator">-</span> center<span class="token punctuation">.</span>y<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token punctuation">(</span>b<span class="token punctuation">.</span>y <span class="token operator">-</span> center<span class="token punctuation">.</span>y<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span>b<span class="token punctuation">.</span>y <span class="token operator">-</span> center<span class="token punctuation">.</span>y<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> d1 <span class="token operator">></span> d2<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//冒泡排序</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> cnt <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> cnt <span class="token operator">-</span> i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span>        <span class="token punctuation">{</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">PointCmp</span><span class="token punctuation">(</span>vPoints<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">,</span> vPoints<span class="token punctuation">[</span>j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> center<span class="token punctuation">)</span><span class="token punctuation">)</span>                std<span class="token operator">::</span><span class="token function">swap</span><span class="token punctuation">(</span>vPoints<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">,</span> vPoints<span class="token punctuation">[</span>j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">// 顺时针排序</span><span class="token keyword">void</span> <span class="token function">ClockWiseSortPoints</span><span class="token punctuation">(</span>pcl<span class="token operator">::</span>PointCloud<span class="token operator">&lt;</span>pcl<span class="token operator">::</span>PointXYZ<span class="token operator">></span><span class="token operator">&amp;</span> vPoints<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">int</span> cnt <span class="token operator">=</span> <span class="token keyword">static_cast</span><span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">></span><span class="token punctuation">(</span>vPoints<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>cnt <span class="token operator">&lt;</span> <span class="token number">3</span><span class="token punctuation">)</span>        <span class="token keyword">return</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//计算中心</span>    Eigen<span class="token operator">::</span>Vector4f centroid<span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 质心</span>    pcl<span class="token operator">::</span><span class="token function">compute3DCentroid</span><span class="token punctuation">(</span>vPoints<span class="token punctuation">,</span> centroid<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 齐次坐标，（c0,c1,c2,1）</span>    pcl<span class="token operator">::</span>PointXYZ center<span class="token punctuation">{</span> centroid<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>centroid<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token punctuation">,</span>centroid<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//若点a大于点b,即点a在点b顺时针方向,返回true,否则返回false</span>    <span class="token keyword">auto</span> PointCmp <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token keyword">const</span> pcl<span class="token operator">::</span>PointXYZ<span class="token operator">&amp;</span> a<span class="token punctuation">,</span> <span class="token keyword">const</span> pcl<span class="token operator">::</span>PointXYZ<span class="token operator">&amp;</span> b<span class="token punctuation">,</span> <span class="token keyword">const</span> pcl<span class="token operator">::</span>PointXYZ<span class="token operator">&amp;</span> center<span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>a<span class="token punctuation">.</span>x <span class="token operator">>=</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> b<span class="token punctuation">.</span>x <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span>            <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>a<span class="token punctuation">.</span>x <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> b<span class="token punctuation">.</span>x <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>            <span class="token keyword">return</span> a<span class="token punctuation">.</span>y <span class="token operator">></span> b<span class="token punctuation">.</span>y<span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//向量OA和向量OB的叉积，向量OA和OB的叉积大于0，则向量OA在向量OB的逆时针方向，即点A小于点B。</span>        <span class="token keyword">float</span> det <span class="token operator">=</span> <span class="token punctuation">(</span>a<span class="token punctuation">.</span>x <span class="token operator">-</span> center<span class="token punctuation">.</span>x<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span>b<span class="token punctuation">.</span>y <span class="token operator">-</span> center<span class="token punctuation">.</span>y<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token punctuation">(</span>b<span class="token punctuation">.</span>x <span class="token operator">-</span> center<span class="token punctuation">.</span>x<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span>a<span class="token punctuation">.</span>y <span class="token operator">-</span> center<span class="token punctuation">.</span>y<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>det <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span>            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>det <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span>            <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//向量OA和向量OB共线，以距离判断大小</span>        <span class="token keyword">float</span> d1 <span class="token operator">=</span> <span class="token punctuation">(</span>a<span class="token punctuation">.</span>x <span class="token operator">-</span> center<span class="token punctuation">.</span>x<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span>a<span class="token punctuation">.</span>x <span class="token operator">-</span> center<span class="token punctuation">.</span>x<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token punctuation">(</span>a<span class="token punctuation">.</span>y <span class="token operator">-</span> center<span class="token punctuation">.</span>y<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span>a<span class="token punctuation">.</span>y <span class="token operator">-</span> center<span class="token punctuation">.</span>y<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">float</span> d2 <span class="token operator">=</span> <span class="token punctuation">(</span>b<span class="token punctuation">.</span>x <span class="token operator">-</span> center<span class="token punctuation">.</span>x<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span>b<span class="token punctuation">.</span>x <span class="token operator">-</span> center<span class="token punctuation">.</span>y<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token punctuation">(</span>b<span class="token punctuation">.</span>y <span class="token operator">-</span> center<span class="token punctuation">.</span>y<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span>b<span class="token punctuation">.</span>y <span class="token operator">-</span> center<span class="token punctuation">.</span>y<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> d1 <span class="token operator">></span> d2<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//冒泡排序</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> cnt <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> cnt <span class="token operator">-</span> i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span>        <span class="token punctuation">{</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">PointCmp</span><span class="token punctuation">(</span>vPoints<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">,</span> vPoints<span class="token punctuation">[</span>j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> center<span class="token punctuation">)</span><span class="token punctuation">)</span>                std<span class="token operator">::</span><span class="token function">swap</span><span class="token punctuation">(</span>vPoints<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">,</span> vPoints<span class="token punctuation">[</span>j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span> <span class="token keyword">char</span><span class="token operator">*</span><span class="token operator">*</span> argv<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">//--------------------------加载点云数据----------------------------</span>    pcl<span class="token operator">::</span>PointCloud<span class="token operator">&lt;</span>pcl<span class="token operator">::</span>PointXYZ<span class="token operator">></span><span class="token operator">::</span>Ptr <span class="token function">cloud</span><span class="token punctuation">(</span><span class="token keyword">new</span> pcl<span class="token operator">::</span>PointCloud<span class="token operator">&lt;</span>pcl<span class="token operator">::</span>PointXYZ<span class="token operator">></span><span class="token punctuation">)</span><span class="token punctuation">;</span>    pcl<span class="token operator">::</span>PCDReader reader<span class="token punctuation">;</span>    reader<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span><span class="token string">"排序.pcd"</span><span class="token punctuation">,</span> <span class="token operator">*</span>cloud<span class="token punctuation">)</span><span class="token punctuation">;</span>    std<span class="token operator">::</span>cerr <span class="token operator">&lt;&lt;</span> <span class="token string">"原始点云点的个数: "</span> <span class="token operator">&lt;&lt;</span> cloud<span class="token operator">-</span><span class="token operator">></span>points<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> std<span class="token operator">::</span>endl<span class="token punctuation">;</span>    <span class="token function">ClockWiseSortPoints</span><span class="token punctuation">(</span><span class="token operator">*</span>cloud<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//CounterClockWiseSortPoints(*cloud); // 逆时针排序</span>    <span class="token comment" spellcheck="true">//增加多边形</span>    pcl<span class="token operator">::</span>PlanarPolygon<span class="token operator">&lt;</span>pcl<span class="token operator">::</span>PointXYZ<span class="token operator">></span> polygon<span class="token punctuation">;</span>    pcl<span class="token operator">::</span>PointCloud<span class="token operator">&lt;</span>pcl<span class="token operator">::</span>PointXYZ<span class="token operator">></span> contour<span class="token punctuation">;</span>    contour<span class="token punctuation">.</span>width <span class="token operator">=</span> cloud<span class="token operator">-</span><span class="token operator">></span>width<span class="token punctuation">;</span>    contour<span class="token punctuation">.</span>height <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>    contour<span class="token punctuation">.</span>is_dense <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>    contour<span class="token punctuation">.</span><span class="token function">resize</span><span class="token punctuation">(</span>contour<span class="token punctuation">.</span>height <span class="token operator">*</span> contour<span class="token punctuation">.</span>width<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span>size_t i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> cloud<span class="token operator">-</span><span class="token operator">></span>points<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span>    <span class="token punctuation">{</span>        cout <span class="token operator">&lt;&lt;</span> <span class="token string">"第"</span> <span class="token operator">&lt;&lt;</span> i <span class="token operator">&lt;&lt;</span> <span class="token string">"个点的坐标为"</span> <span class="token operator">&lt;&lt;</span> cloud<span class="token operator">-</span><span class="token operator">></span>points<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>        contour<span class="token punctuation">.</span>points<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> cloud<span class="token operator">-</span><span class="token operator">></span>points<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    polygon<span class="token punctuation">.</span><span class="token function">setContour</span><span class="token punctuation">(</span>contour<span class="token punctuation">)</span><span class="token punctuation">;</span>    pcl<span class="token operator">::</span>io<span class="token operator">::</span><span class="token function">savePCDFileASCII</span><span class="token punctuation">(</span><span class="token string">"顺时针排列.pcd"</span><span class="token punctuation">,</span> <span class="token operator">*</span>cloud<span class="token punctuation">)</span><span class="token punctuation">;</span>    pcl<span class="token operator">::</span>visualization<span class="token operator">::</span>PCLVisualizer <span class="token function">viewer</span><span class="token punctuation">(</span><span class="token string">"Viewer"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    viewer<span class="token punctuation">.</span><span class="token function">setWindowName</span><span class="token punctuation">(</span><span class="token string">"平面点云边界点排序"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    viewer<span class="token punctuation">.</span><span class="token function">addPolygon</span><span class="token punctuation">(</span>polygon<span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">"ploygon"</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    viewer<span class="token punctuation">.</span>addPointCloud<span class="token operator">&lt;</span>pcl<span class="token operator">::</span>PointXYZ<span class="token operator">></span><span class="token punctuation">(</span>cloud<span class="token punctuation">,</span> <span class="token string">"sample cloud"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    viewer<span class="token punctuation">.</span><span class="token function">setPointCloudRenderingProperties</span><span class="token punctuation">(</span>pcl<span class="token operator">::</span>visualization<span class="token operator">::</span>PCL_VISUALIZER_POINT_SIZE<span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token string">"sample cloud"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 设置点云大</span>    <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token operator">!</span>viewer<span class="token punctuation">.</span><span class="token function">wasStopped</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        viewer<span class="token punctuation">.</span><span class="token function">spinOnce</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="6-点云合并"><a href="#6-点云合并" class="headerlink" title="6. 点云合并"></a>6. 点云合并</h4><pre class="line-numbers language-cpp"><code class="language-cpp"><span class="token comment" spellcheck="true">// Objects for storing the point clouds.</span>pcl<span class="token operator">::</span>PointCloud<span class="token operator">&lt;</span>pcl<span class="token operator">::</span>PointXYZRGBA<span class="token operator">></span><span class="token operator">::</span>Ptr <span class="token function">cloudA</span><span class="token punctuation">(</span><span class="token keyword">new</span> pcl<span class="token operator">::</span>PointCloud<span class="token operator">&lt;</span>pcl<span class="token operator">::</span>PointXYZRGBA<span class="token operator">></span><span class="token punctuation">)</span><span class="token punctuation">;</span>pcl<span class="token operator">::</span>PointCloud<span class="token operator">&lt;</span>pcl<span class="token operator">::</span>PointXYZRGBA<span class="token operator">></span><span class="token operator">::</span>Ptr <span class="token function">cloudB</span><span class="token punctuation">(</span><span class="token keyword">new</span> pcl<span class="token operator">::</span>PointCloud<span class="token operator">&lt;</span>pcl<span class="token operator">::</span>PointXYZRGBA<span class="token operator">></span><span class="token punctuation">)</span><span class="token punctuation">;</span>pcl<span class="token operator">::</span>PointCloud<span class="token operator">&lt;</span>pcl<span class="token operator">::</span>PointXYZRGBA<span class="token operator">></span><span class="token operator">::</span>Ptr <span class="token function">cloudC</span><span class="token punctuation">(</span><span class="token keyword">new</span> pcl<span class="token operator">::</span>PointCloud<span class="token operator">&lt;</span>pcl<span class="token operator">::</span>PointXYZRGBA<span class="token operator">></span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 读取两个点云文件</span><span class="token keyword">if</span> <span class="token punctuation">(</span>pcl<span class="token operator">::</span>io<span class="token operator">::</span>loadPLYFile<span class="token operator">&lt;</span>pcl<span class="token operator">::</span>PointXYZRGBA<span class="token operator">></span><span class="token punctuation">(</span><span class="token string">"C:\\Users\\fhlhc\\Desktop\\left.ply"</span><span class="token punctuation">,</span> <span class="token operator">*</span>cloudA<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">if</span> <span class="token punctuation">(</span>pcl<span class="token operator">::</span>io<span class="token operator">::</span>loadPLYFile<span class="token operator">&lt;</span>pcl<span class="token operator">::</span>PointXYZRGBA<span class="token operator">></span><span class="token punctuation">(</span><span class="token string">"C:\\Users\\fhlhc\\Desktop\\right.ply"</span><span class="token punctuation">,</span> <span class="token operator">*</span>cloudB<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">// Create cloud "C", with the points of both "A" and "B".点云A、B合并生成C</span><span class="token operator">*</span>cloudC <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token operator">*</span>cloudA<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token operator">*</span>cloudB<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// Now cloudC->points.size() equals cloudA->points.size() + cloudB->points.size().</span><span class="token comment" spellcheck="true">//可视化</span>pcl<span class="token operator">::</span>visualization<span class="token operator">::</span>PCLVisualizer <span class="token function">viewer</span><span class="token punctuation">(</span><span class="token string">"合并两个点云"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="7-通过某点对空间直线做垂线，求垂足"><a href="#7-通过某点对空间直线做垂线，求垂足" class="headerlink" title="7. 通过某点对空间直线做垂线，求垂足"></a>7. 通过某点对空间直线做垂线，求垂足</h4><pre class="line-numbers language-cpp"><code class="language-cpp">pcl<span class="token operator">::</span>PointXYZ <span class="token function">GetFootOfPerpendicular</span><span class="token punctuation">(</span>    <span class="token keyword">const</span> pcl<span class="token operator">::</span>PointXYZ pt<span class="token punctuation">,</span>     <span class="token comment" spellcheck="true">// 直线外一点</span>    <span class="token keyword">const</span> pcl<span class="token operator">::</span>PointXYZ begin<span class="token punctuation">,</span>  <span class="token comment" spellcheck="true">// 直线开始点</span>    <span class="token keyword">const</span> pcl<span class="token operator">::</span>PointXYZ end<span class="token punctuation">)</span>   <span class="token comment" spellcheck="true">// 直线结束点</span><span class="token punctuation">{</span>    pcl<span class="token operator">::</span>PointXYZ retVal<span class="token punctuation">;</span>    <span class="token keyword">double</span> dx <span class="token operator">=</span> begin<span class="token punctuation">.</span>x <span class="token operator">-</span> end<span class="token punctuation">.</span>x<span class="token punctuation">;</span>    <span class="token keyword">double</span> dy <span class="token operator">=</span> begin<span class="token punctuation">.</span>y <span class="token operator">-</span> end<span class="token punctuation">.</span>y<span class="token punctuation">;</span>    <span class="token keyword">double</span> dz <span class="token operator">=</span> begin<span class="token punctuation">.</span>z <span class="token operator">-</span> end<span class="token punctuation">.</span>z<span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">abs</span><span class="token punctuation">(</span>dx<span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">0.00000001</span> <span class="token operator">&amp;&amp;</span> <span class="token function">abs</span><span class="token punctuation">(</span>dy<span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">0.00000001</span> <span class="token operator">&amp;&amp;</span> <span class="token function">abs</span><span class="token punctuation">(</span>dz<span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">0.00000001</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        retVal <span class="token operator">=</span> begin<span class="token punctuation">;</span>        <span class="token keyword">return</span> retVal<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">double</span> u <span class="token operator">=</span> <span class="token punctuation">(</span>pt<span class="token punctuation">.</span>x <span class="token operator">-</span> begin<span class="token punctuation">.</span>x<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span>begin<span class="token punctuation">.</span>x <span class="token operator">-</span> end<span class="token punctuation">.</span>x<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token punctuation">(</span>pt<span class="token punctuation">.</span>y <span class="token operator">-</span> begin<span class="token punctuation">.</span>y<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span>begin<span class="token punctuation">.</span>y <span class="token operator">-</span> end<span class="token punctuation">.</span>y<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token punctuation">(</span>pt<span class="token punctuation">.</span>z <span class="token operator">-</span> begin<span class="token punctuation">.</span>z<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span>begin<span class="token punctuation">.</span>z <span class="token operator">-</span> end<span class="token punctuation">.</span>z<span class="token punctuation">)</span><span class="token punctuation">;</span>    u <span class="token operator">=</span> u <span class="token operator">/</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>dx <span class="token operator">*</span> dx<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token punctuation">(</span>dy <span class="token operator">*</span> dy<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token punctuation">(</span>dz <span class="token operator">*</span> dz<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    retVal<span class="token punctuation">.</span>x <span class="token operator">=</span> begin<span class="token punctuation">.</span>x <span class="token operator">+</span> u <span class="token operator">*</span> dx<span class="token punctuation">;</span>    retVal<span class="token punctuation">.</span>y <span class="token operator">=</span> begin<span class="token punctuation">.</span>y <span class="token operator">+</span> u <span class="token operator">*</span> dy<span class="token punctuation">;</span>    retVal<span class="token punctuation">.</span>z <span class="token operator">=</span> begin<span class="token punctuation">.</span>z <span class="token operator">+</span> u <span class="token operator">*</span> dz<span class="token punctuation">;</span>    <span class="token keyword">return</span> retVal<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> PCL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      
        <title>“感知红色广州”——广州市红旅景点情感分析系统</title>
      
      <link href="/2023/10/09/projects/%E2%80%9C%E6%84%9F%E7%9F%A5%E7%BA%A2%E8%89%B2%E5%B9%BF%E5%B7%9E%E2%80%9D%E2%80%94%E2%80%94%E5%B9%BF%E5%B7%9E%E5%B8%82%E7%BA%A2%E6%97%85%E6%99%AF%E7%82%B9%E6%83%85%E6%84%9F%E5%88%86%E6%9E%90%E7%B3%BB%E7%BB%9F/"/>
      <url>/2023/10/09/projects/%E2%80%9C%E6%84%9F%E7%9F%A5%E7%BA%A2%E8%89%B2%E5%B9%BF%E5%B7%9E%E2%80%9D%E2%80%94%E2%80%94%E5%B9%BF%E5%B7%9E%E5%B8%82%E7%BA%A2%E6%97%85%E6%99%AF%E7%82%B9%E6%83%85%E6%84%9F%E5%88%86%E6%9E%90%E7%B3%BB%E7%BB%9F/</url>
      
        <content type="html"><![CDATA[<p>ESRI2023——“感知红色广州”——广州市红旅景点情感分析系统</p><h2 id="1-项目背景"><a href="#1-项目背景" class="headerlink" title="1.项目背景"></a>1.项目背景</h2><p>&emsp;&emsp;近年来，广州市政府愈发注重对红色资源的保护，在红色文化资源保护利用方面取得了不少成绩。根据中共广州市委党史研究室的普查结果显示, 广州市党史旧 (遗) 址现共有 190 处。依托全国文物普查和广州市第五次文物普查成果，当中知名度比较高、保护级别比较高的广州红色史迹文保单位共 25 处。当前，日益增多的游客通过互联网获取或反馈相关地点的旅游信息,“利用网络相互分享旅途体验或感受,从而使得有关旅游的大量舆论信息在网络平台上得以有效地交汇”。</p><p>&emsp;&emsp;因此，本项目聚焦于广州市红色旅游景点，以互联网评论为主要数据源之一，全面了解红色旅游景点的分布特征，厘清红色文化资源。通过情感分析从中微观层面对广州市红色旅游景点进行评价，为进一步保护红色旅游景点和因地制宜开发提供更加具有实践性的建议。</p><h2 id="2-项目简介"><a href="#2-项目简介" class="headerlink" title="2.项目简介"></a>2.项目简介</h2><p>&emsp;&emsp;针对广州市内的红色旅游景点，本项目从地理空间、游客感知意象的角度出发，利用地理信息系统空间分析技术，采用百度 AI 情感分析接口，同时运用 Vue+Express+PostgreSQL 进行管理分析系统的搭建，将网络评论数据、景点 POI 数据、道路交通数据等作为数据源，通过对广州市红色旅游景点的空间特征、可达性、游客情感倾向进行分析，规划广州市红色研学路线，研究广州市红色旅游景点的空间格局及保护开发方法。</p><h2 id="3-需求分析"><a href="#3-需求分析" class="headerlink" title="3. 需求分析"></a>3. 需求分析</h2><p>&emsp;&emsp;本系统是一个综合性的应用系统，旨在为游客提供丰富的功能和信息，帮助他们更好地了解、规划和体验广州市的红色旅游景点。</p><ul><li>数据看板： 系统应提供一个数据看板，展示广州市各个红旅景点的基本信息、访问量、用户评价等数据。数据看板可以帮助管理人员实时了解景点的热度和用户反馈，以便进行合理的资源分配和管理。空间分析结果可视化： 为了帮助用户更直观地了解广州市红旅景点之间的空间分布和关联，系统应提供地图展示功能，将各个景点在地图上标注出来，同时将分析结果可视化，辅助管理人员进行下一步的判断。</li><li>官方红色景点研学路线推荐： 系统应当根据景点的历史背景和相关性，为用户推荐官方认定的红色景点研学路线。这些路线可以涵盖不同主题和历史事件，使用户能够全面了解广州市的红色旅游资源。</li><li>红旅景点分类： 为了方便用户查找感兴趣的景点，系统应提供红旅景点的分类功能，例如按照历史时期、主题等进行分类，让用户能够有针对性地搜索和选择。</li><li>研学路线规划： 用户可以根据自己的兴趣和需求，使用系统的研学路线规划功能，自行选择红旅景点，规划行程路线，系统可以根据用户选择进行路径优化。</li><li>红旅景点打卡： 用户在游览景点时可以通过系统进行打卡，记录自己的到访。这可以激发用户的互动和参与感，同时也可以为用户提供留念和分享的方式。</li><li>路线收藏： 用户可以将自己规划的研学路线或喜欢的景点收藏起来，方便日后查看和使用。这个功能可以帮助用户更好地整理和保存旅游计划。</li><li>情感分析： 系统可以利用自然语言处理技术，对用户在景点留下的评价进行情感分析，从而了解用户对景点的满意度和情感体验，为景点改进提供参考。</li><li>用户账号管理： 系统需要提供用户注册和登录功能，以及管理用户个人信息和历史记录的功能，保障用户信息安全和隐私。</li></ul><h2 id="4-主要功能"><a href="#4-主要功能" class="headerlink" title="4.主要功能"></a>4.主要功能</h2><h5 id="4-1-系统架构图"><a href="#4-1-系统架构图" class="headerlink" title="4.1 系统架构图"></a>4.1 系统架构图</h5><div align=center><img src="https://raw.githubusercontent.com/FallonXC/blogImg/main/C1385%E7%B3%BB%E7%BB%9F%E6%9E%B6%E6%9E%84.png" alt="系统架构" width="700"></div><h5 id="4-2-系统架构说明"><a href="#4-2-系统架构说明" class="headerlink" title="4.2 系统架构说明"></a>4.2 系统架构说明</h5><ul><li><p>在数据层面，本系统采用 PostgreSQL 服务器关系型数据库，结合 Python 网络爬虫技术，调用腾讯 API；</p></li><li><p>在服务层面，Web 服务中结合 Vue-CLI 与 Express，利用 ArcGis Server 中地图服务于 GP 服务，实现本系统的服务需求；</p></li><li><p>在应用层面，结合 OpenLayers API，本系统实现了“空间分布特征”、“景点定位打卡”这两方面的数据服务；提供了“空间分析”、“叠置分析”、“评论情感分析”这三方面数据分析功能；能够采用“景点红色文化”、“研学路线推荐及规划”这两个功能为用户提供辅助决策；</p></li><li><p>在访问层，借助 HTML、CSS、JavaScript、ECharts、Element-plus 和 Axios，在 PC 和微信小程序对系统进行访问。</p></li></ul><h2 id="5-主要功能"><a href="#5-主要功能" class="headerlink" title="5.主要功能"></a>5.主要功能</h2><div align=center><img src="https://raw.githubusercontent.com/FallonXC/blogImg/main/C1385%E7%B3%BB%E7%BB%9F%E5%8A%9F%E8%83%BD.png" alt="系统功能" width="700"></div><h2 id="6-关键技术"><a href="#6-关键技术" class="headerlink" title="6.关键技术"></a>6.关键技术</h2><h5 id="6-1-情感分析"><a href="#6-1-情感分析" class="headerlink" title="6.1 情感分析"></a>6.1 情感分析</h5><p>&emsp;&emsp;情感倾向分析（简称Senta）针对带有主观描述的中文文本，可自动判断该文本的情感极性类别并给出相应的置信度，能够帮助企业理解用户消费习惯、分析热点话题和危机舆情监控，为企业提供有利的决策支持。本系统采用百度云API 提供的情感倾向分析接口对包含主观观点信息的文本进行情感极性类别（积极、消极、中性）的判断，并给出相应的置信度。该接口对只包含单一主体主观信息的文本，进行自动情感倾向性判断（积极、消极、中性），并给出相应的置信度。该接口依赖已经建立的为口碑分析、话题监控、舆情分析等应用提供基础技术支持。</p><p>&emsp;&emsp;本系统基于百度云API服务，先进行认证授权，创建情感分析应用后获取API Key及Secret Key，进行接口调用操作，及相关配置，最后通过Python根据HTTP方法请求接口、POST方法调用，得到参数返回sentiment、confidence、positive_prob、negative_prob（以上参数分别表示为情感极性分类结果、分类的置信度、属于积极类别的概率、属于消极类别的概率），最后整理处理分数。</p><div align=center><img src="https://raw.githubusercontent.com/FallonXC/blogImg/main/C1385%E6%83%85%E6%84%9F%E5%88%86%E6%9E%90%E6%B5%81%E7%A8%8B%E5%9B%BE.png" alt="情感分析流程图" width="700"></div><center>图 1  情感分析流程图</center><h5 id="6-2-Vue3-Express-PostgreSQL"><a href="#6-2-Vue3-Express-PostgreSQL" class="headerlink" title="6.2 Vue3+Express+PostgreSQL"></a>6.2 Vue3+Express+PostgreSQL</h5><p>&emsp;&emsp;Vue.js是一种用于构建用户界面的渐进式JavaScript框架。它专注于视图层，提供了一套声明式的组件系统，可以轻松地将UI拆分为可重用的组件。Vue具有轻量化、组件化、响应式数据绑定等优势；Express是一个基于Node.js的后端框架，用于构建Web应用和API。它提供了一系列的工具和功能，使后端开发变得更加简单和高效；PostgreSQL是一个功能强大的开源关系型数据库管理系统。</p><p>&emsp;&emsp;Vue3+Express+PostgreSQL可以构建出现代化的全栈Web应用程序，实现前后端分离式开发，提高代码的可维护性和协作效率。</p><h5 id="6-3-openlayers框架"><a href="#6-3-openlayers框架" class="headerlink" title="6.3 openlayers框架"></a>6.3 openlayers框架</h5><p>&emsp;&emsp;OpenLayers是一个开源的JavaScript库，用于在Web上创建交互式地图和地理信息系统（GIS）应用程序。它提供了丰富的功能和工具，使开发人员能够轻松地在网页中嵌入地图、图层、标记、矢量数据等地理信息。</p><h2 id="7-作品亮点"><a href="#7-作品亮点" class="headerlink" title="7. 作品亮点"></a>7. 作品亮点</h2><ul><li><p><strong>多源数据的红色旅游分析</strong>：本系统以红色旅游景点为核心对象，利用网络评论、POI 等多源数据挖掘分析景点的空间特征，呈现直观、清晰且信息丰富的多种分析结果可视化，为管理研究人员提供了实践性的决策建议，有助于更好地管理保护、开发红色旅游资源。</p></li><li><p><strong>多维度情感分析与数据展示</strong>： 利用基于深度学习的百度 AI 情感分析技术结合游客的网络评论数据，能够更精准地捕捉游客对红色旅游景点的情感和感知意向，为管理人员提供更准确的用户反馈，从而优化景点服务和体验。</p></li><li><p><strong>定制化研学路线设计</strong>： 在结合已有红色景点分析功能的基础上，系统设计了具有区域特色、多层次、多方面的红色研学路线。这种设计支持研究人员自主规划和设计研学路线，使游客能够更全面地了解广州市的红色历史文化。</p></li><li><p><strong>小程序端的增强互动性</strong>： 通过小程序端，游客可以更方便地定位打卡，展示已打卡景点，增加游客与景点的互动性，使旅行更加有趣。</p></li><li><p><strong>综合性的旅游辅助平台</strong>： 本系统不仅提供景点信息和路线规划，还结合情感分析、互动打卡等功能，创造了一个全面的旅游辅助平台，增强了游客的旅行体验。</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> esri </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 项目 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      
        <title>背包客旅游自助地图——以广州市为例</title>
      
      <link href="/2023/10/09/projects/%E8%83%8C%E5%8C%85%E5%AE%A2%E6%97%85%E6%B8%B8%E8%87%AA%E5%8A%A9%E5%9C%B0%E5%9B%BE%E2%80%94%E2%80%94%E4%BB%A5%E5%B9%BF%E5%B7%9E%E5%B8%82%E4%B8%BA%E4%BE%8B/"/>
      <url>/2023/10/09/projects/%E8%83%8C%E5%8C%85%E5%AE%A2%E6%97%85%E6%B8%B8%E8%87%AA%E5%8A%A9%E5%9C%B0%E5%9B%BE%E2%80%94%E2%80%94%E4%BB%A5%E5%B9%BF%E5%B7%9E%E5%B8%82%E4%B8%BA%E4%BE%8B/</url>
      
        <content type="html"><![CDATA[<p>背包客旅游自助地图——以广州市为例</p><h2 id="1-引言"><a href="#1-引言" class="headerlink" title="1.引言"></a><strong>1.引言</strong></h2><h4 id="1-1文档目的"><a href="#1-1文档目的" class="headerlink" title="1.1文档目的"></a>1.1文档目的</h4><p>编写此文档有两个目的，一个是以文档的形式对项目需求进行描述和界定,以便于和用户达成对需求理解的一致认可;另一个目的是供项目团队成员更好的了解需求情况，使本次系统开发的任务和目的更加明确，同时作为本次比赛的跟踪、评审及评委老师、指导老师在比赛系统项目开发设计过程中监督或者检查比赛结果的主要依据。</p><p>文档主要面向小组成员、评委老师、指导老师，在现有研究资料的基础上进行需求描述，供评委老师直观了解本系统提供的需求服务，小组成员按照此进行系统开发设计。</p><h4 id="1-2术语与缩写解释"><a href="#1-2术语与缩写解释" class="headerlink" title="1.2术语与缩写解释"></a>1.2术语与缩写解释</h4><h5 id="1-2-1背包客概述"><a href="#1-2-1背包客概述" class="headerlink" title="1.2.1背包客概述"></a>1.2.1背包客概述</h5><p>背包客英文名为Backpacker，是由Backpacking一词演变而来，泛指三五成群或者单枪匹马四处游逛的人，也就是背着背包做长途自助旅行的人，目的在于通过游历认识世界，认识自我，挑战极限等，背包客有自己的喜好，有自己的个性，有自己的风格。</p><h5 id="1-2-2自助旅游概述"><a href="#1-2-2自助旅游概述" class="headerlink" title="1.2.2自助旅游概述"></a>1.2.2自助旅游概述</h5><p>自助旅游使所有的花费都可依自己的喜好来支配，行程可弹性调整，又可深入了解当地民情风俗。自助旅游绝非玩得多、花得少的旅游方式，而是一种在同一地方花上较多的时间深入了解该地的特色，接触当地的人与事，看自己想看见的东西，走自己想走的路。</p><h2 id="2-需求分析"><a href="#2-需求分析" class="headerlink" title="2.需求分析"></a><strong>2.需求分析</strong></h2><h4 id="2-1系统开发使用软件-操作平台："><a href="#2-1系统开发使用软件-操作平台：" class="headerlink" title="2.1系统开发使用软件&#x2F;操作平台："></a>2.1系统开发使用软件&#x2F;操作平台：</h4><table><thead><tr><th align="center">环境</th><th align="center">配置</th></tr></thead><tbody><tr><td align="center">体系结构</td><td align="center">B&#x2F;S架构；</td></tr><tr><td align="center">开发平台</td><td align="center">Windows、ESRI Leaflet等；</td></tr><tr><td align="center">开发工具</td><td align="center">Visual Studio 2019；PyCharm 2021；Dreamweaver；IDEA</td></tr><tr><td align="center">开发语言</td><td align="center">JavaScript；Python；HTML；Java</td></tr><tr><td align="center">运行环境</td><td align="center">硬件参数：CPU主频：1.6GHz；内存：8G；<br>硬盘：512G；  软件参数：Google浏览器98以上；Windows 10；</td></tr><tr><td align="center">数据库</td><td align="center">PostgreSQL；</td></tr></tbody></table><br><h4 id="2-2系统背景介绍"><a href="#2-2系统背景介绍" class="headerlink" title="2.2系统背景介绍"></a>2.2系统背景介绍</h4><p>&emsp;&emsp;自改革开发以来，我国社会经济高速发展，人民生活水平不断提高，旅游的形式也随之越来越多样化，出现了各样满足不同人群不同需求的旅游形式，当中自助旅游最为突出，深受广大旅游爱好者的喜爱，又以背包客最为典型。作为当代旅游的一种形式，背包客旅游在国际上的发展速度极快，超出当今世界旅游发展速度60%。</p><p>&emsp;&emsp;随着消费观念的转变和经济收入的提高，旅游人员构成广泛，各行各业和社会阶层都有相当大数量的人加入到背包自助旅行的行列中来。同时，人们对于第三产业的消费需求也不断上升，尤其是旅游业，不断涌现出各种各样的旅行社与相关平台。旅游社是一种向公众提供关于可能的旅行、居住和相关服务，包括服务酬金和条件的信息的行业机构，其根据规划的固定路线不断组织旅游人员进行游览，让游客不用费心费力去进行对行程的规划。而相关的旅游平台如马蜂窝、携程等网站则提供了相关的旅游信息，如交通订票、住宿预约、景点开放信息等等，可为游客对其行程的规划扩大消息面，提供更有力的保障。</p><p>&emsp;&emsp;但这些旅行社与平台均存在其不同的弊端，比如旅行社的线路较为固定，无法根据游客喜好自定义地改变行程；旅游平台消息面广，但也存在信息繁杂、难以整合等问题，用户对其行程的规划时需自己查询很多交通、住宿、景点信息，并从中进行人工的筛选，手动记录与串联，同时其私人定制化的服务通常也伴随着较为高额的收费，难以推广。</p><p>&emsp;&emsp;而背包客追求认识世界，认识自我，挑战极限的观念，似乎天生与上述旅行社以及各类平台存在矛盾，也正是由于背包客这样的特质，同时存在以下问题：</p><p>&emsp;&emsp;但是在我国背包自助旅游一种新的旅游形式，在发展过程中还存在以下问题：</p><ul><li><p>大部分背包客对当地风景名胜、文化胜地了解较为不深入，难以深刻体会当地文化特色和风俗习惯；</p></li><li><p>大部分背包客为规避旅途中的风险，选择重复前人的旅行经验，缺乏一定的自由度；</p></li><li><p>背包客旅行路线规划中，查阅资料、安排行程等前期工作相对繁琐，使得背包客入门门槛较高；</p></li><li><p>大量的旅游资源、紧促的旅游时间以及人生地不熟等原因，导致背包客面临选择困难或者不能更好的选择出适合自己的旅游路线；</p></li></ul><p>&emsp;&emsp;针对国内对于旅游路线用户自定义的平台较少这一现象，本项目旨在完善这一空缺，建立一个<strong>助力用户规划旅行计划并提供旅行相关服务</strong>的web端旅游自助地图平台。</p><h4 id="2-3-系统目标"><a href="#2-3-系统目标" class="headerlink" title="2.3 系统目标"></a><strong>2.3 系统目标</strong></h4><p>&emsp;&emsp;本平台将应用在第三产业的旅游业中，随着我国GDP的增长，有旅行需求的人不断增多，市场逐渐扩大。平台的用户群体聚焦在年轻人中，作为二十一世纪的青年，他们所接触到的世界更为广阔，接受信息的速度更快，其逐渐开始不仅仅满足于传统的旅行包办，而是选择去享受做计划的过程。</p><p>&emsp;&emsp;但另一方面，由于网络信息的繁杂，用户对于某些信息可能会出现错失、错信的情况，且做计划的过程较为繁琐，需要人为的记录与调用，因此导致该计划可能无法很好地落实在旅行过程中。同时，景点转换的交通也是用户进行计划较为关注的方面之一，旅行往往是到达一个陌生的城市，游客游览的过程中可能会迷路、分不清方向的情况，因此需要更为周全的准备，但交通状况较为复杂，更具变化性。此外，众多旅游社交平台网站上积累了不少用户对旅游景点的评论信息，可以为游客制定旅游计划提供参考。</p><p>&emsp;&emsp;针对以上问题，本平台重点针对自助旅游者，将帮助用户简化制定旅游计划的流程，完善计划的细节，根据用户选定的地点等，自动生成一条贯穿既定地点的安全性高、实用性强、方便且快捷的路线。此外，还计划利用自然语言处理技术提取各景点在线评论信息，分析景点的情感认知特征，给用户呈现一份完善的旅行计划，如为用户说明建议游玩时间、景点热门程度等的相关指标与参数。</p><h4 id="2-4-技术框架"><a href="#2-4-技术框架" class="headerlink" title="2.4 技术框架"></a><strong>2.4 技术框架</strong></h4><ul><li><p>在数据层面，本系统采用PostgreSQL服务器关系型数据库，结合Python网络爬虫技术，调用高德API；</p></li><li><p>在服务层面，Web服务中结合Vue-CLI与SpringBoot，利用ArcGis Server中地图服务于GP服务，实现本系统的服务需求；</p></li><li><p>在应用层面，本系统实现了“实时获取评论”、“景点信息统计”、“动态展示评价”这三方面的数据服务；提供了“属性筛选”、“热点分析”、“评论情感分析”这三方面数据分析功能；能够采用“展示景点特点”、“最优路线规划”、“按需提供建议”这三个功能为背包客提供辅助决策。</p></li></ul><div align=center><img src="https://raw.githubusercontent.com/FallonXC/blogImg/main/C861%E7%B3%BB%E7%BB%9F%E6%9E%B6%E6%9E%84.png" alt="系统架构" width="700"></div><br><center>系统框架图</center><h2 id="3-总体设计"><a href="#3-总体设计" class="headerlink" title="3.总体设计"></a><strong>3.总体设计</strong></h2><h4 id="3-1-功能设计"><a href="#3-1-功能设计" class="headerlink" title="3.1 功能设计"></a><strong>3.1 功能设计</strong></h4><div align=center><img src="https://raw.githubusercontent.com/FallonXC/blogImg/main/C861%E5%8A%9F%E8%83%BD%E6%9E%B6%E6%9E%84.png" alt="系统架构" width="700"></div><br><h4 id="3-2-数据库设计"><a href="#3-2-数据库设计" class="headerlink" title="3.2 数据库设计"></a><strong>3.2 数据库设计</strong></h4><h5 id="3-2-1-数据库概述"><a href="#3-2-1-数据库概述" class="headerlink" title="3.2.1 数据库概述"></a><strong>3.2.1 数据库概述</strong></h5><p>&emsp;&emsp;本系统采用PostgreSQL配备拓展postgis以充当系统的数据库。PostgreSQL是一个强大的对象关系数据库管理系统（ORDBMS）。它是在BSD风格的许可下发布的，因此是自由和开放源代码的软件。PostGIS通过向PostgreSQL添加对空间数据类型、空间索引和空间函数的支持，将PostgreSQL数据库管理系统转换为空间数据库。空间数据库像存储和操作数据库中其他任何对象一样去存储和操作空间对象。其支持几何数据存储，以geometry或geography数据类型存储几何数据，并支持OGC的标准。PostGIS提供了空间索引，大大提高了查询的速度，还以空间函数的方式，提供了基础的空间分析功能，为分析几何信息、确定空间关系和操作几何图形提供了一套完整的空间函数。因为PostGIS是建立在PostgreSQL之上的，所以PostGIS自动继承了重要的”企业级”特性以及开放源代码的标准。</p><p>&emsp;&emsp;对多个用户的支持，复杂的即时查询和对于大型数据集的高性能表现，是空间数据库比文件系统的优越之处。</p><h5 id="3-2-2-数据库结构"><a href="#3-2-2-数据库结构" class="headerlink" title="3.2.2 数据库结构"></a><strong>3.2.2 数据库结构</strong></h5><p>&emsp;&emsp;在本系统中，根据项目需求共设计了user、route、jingdian_gaikuang、picUrl、score_emotion五个表，其中jingdian_gaikuang、picUrl、score_emotion都以poiID为主键，user以userName为主键。</p><ol><li>user表</li></ol><table><thead><tr><th>字段名</th><th>数据类型</th><th>备注</th></tr></thead><tbody><tr><td>userName</td><td>text</td><td>登录名</td></tr><tr><td>password</td><td>text</td><td>登录密码</td></tr><tr><td>sex</td><td>text</td><td>性别</td></tr><tr><td>birth</td><td>date</td><td>出生日期</td></tr></tbody></table><br><ol start="2"><li>route表</li></ol><table><thead><tr><th>字段名</th><th>数据类型</th><th>备注</th></tr></thead><tbody><tr><td>userName</td><td>text</td><td>用户登录名</td></tr><tr><td>routeName</td><td>text</td><td>用户保存的路线名称</td></tr><tr><td>position</td><td>text</td><td>Json数组形式，含路线上景点的名字、坐标和备注信息</td></tr></tbody></table><br><ol start="3"><li>jingdian_gaikuang表</li></ol><table><thead><tr><th>字段名</th><th>数据类型</th><th>备注</th></tr></thead><tbody><tr><td>poiID</td><td>text</td><td>景点编号</td></tr><tr><td>name</td><td>text</td><td>景点名称</td></tr><tr><td>English_name</td><td>text</td><td>景点英文名称</td></tr><tr><td>GCJ02_lng</td><td>double precision</td><td>经度（国家2000坐标系）</td></tr><tr><td>GCJ02_lat</td><td>double precision</td><td>纬度（国家2000坐标系）</td></tr><tr><td>playSpendTime</td><td>text</td><td>建议游玩时间</td></tr><tr><td>opentime</td><td>text</td><td>开放时间</td></tr><tr><td>opentime_tips</td><td>text</td><td>开放时间提示</td></tr><tr><td>tickets</td><td>text</td><td>票价</td></tr><tr><td>tel</td><td>text</td><td>联系电话</td></tr><tr><td>introduction</td><td>text</td><td>景点介绍</td></tr><tr><td>trafficDetail</td><td>text</td><td>Json形式，公交地铁信息</td></tr><tr><td>bigTrafficDetail</td><td>text</td><td>Json数组形式，详细的公交地铁路线信息</td></tr></tbody></table><br><ol start="4"><li>picUrl表</li></ol><table><thead><tr><th>字段名</th><th>数据类型</th><th>备注</th></tr></thead><tbody><tr><td>poiID</td><td>text</td><td>景点编号</td></tr><tr><td>picID</td><td>text</td><td>图片url编号</td></tr><tr><td>name</td><td>text</td><td>景点名称</td></tr><tr><td>address</td><td>text</td><td>景点地址</td></tr><tr><td>picUrl</td><td>text</td><td>图片url</td></tr></tbody></table><br><ol start="5"><li>score_emotion表</li></ol><table><thead><tr><th>字段名</th><th>数据类型</th><th>备注</th></tr></thead><tbody><tr><td>poiID</td><td>text</td><td>景点编号</td></tr><tr><td>name</td><td>text</td><td>景点名称</td></tr><tr><td>general</td><td>real</td><td>整体</td></tr><tr><td>environment</td><td>real</td><td>环境</td></tr><tr><td>price</td><td>real</td><td>价格</td></tr><tr><td>facility</td><td>real</td><td>设备</td></tr><tr><td>others</td><td>real</td><td>其他</td></tr></tbody></table><h4 id="3-3-关键技术"><a href="#3-3-关键技术" class="headerlink" title="3.3 关键技术"></a><strong>3.3 关键技术</strong></h4><h5 id="3-3-1-Vue-SpringBoot-PostgreSQL"><a href="#3-3-1-Vue-SpringBoot-PostgreSQL" class="headerlink" title="3.3.1 Vue+SpringBoot+PostgreSQL"></a><strong>3.3.1 Vue+SpringBoot+PostgreSQL</strong></h5><p>Vue是一个构建用户界面(UI)的[渐进式]JavaScript框架，免除了原生JavaScript中的DOM操作，简化书写，同时其基于MVVM（Model-View_ViewModel）思想，实现数据双向绑定；Spring Boot是基于Spring4的框架，在继承Spring优点的同时，大大简化了Spring应用的初始搭建以及开发过程。内部嵌入了Servlet，不再需要单独安装容器，可直接部署运行项目。Postgresql是当下先进的、自由的、完全免费的开源关系型数据库，同时其具备多线程，处理性能高，可以很好地支持本系统的业务功能。</p><p>Vue+SpringBoot+PostgreSQL的前端、后端以及数据库的完整配置，可保证系统在前端页面在浏览器渲染的完备性以及后端接口的稳定性，Vue+SpringBoot作为目前较为热门的前后端分离式开发的组合，其低成本高效率的特性可以达到简化开发、提升效率的目的。</p><h5 id="3-3-2-情感分析"><a href="#3-3-2-情感分析" class="headerlink" title="3.3.2 情感分析"></a><strong>3.3.2 情感分析</strong></h5><p>文本情感分析(Sentiment Analysis)是指利用自然语言处理和文本挖掘技术，对带有情感色彩的主观性文本进行分析、处理和抽取的过程。本系统中采用自然语言处理NLP模型（Natural Language Processing）对景点评论进行情感分析，该模型主要依赖于已经建立的“情感词典”，对词组赋予情感信息，将词组的情感正负向进行量化，从而判断具体文本所表达的情感。基于统计方法的“情感词典”的建立是情感分类的前提和基础，利用语义相似度计算方法计算词语与基准情感词集的语义相似度，进而推断该文本的情感倾向。此外，还可以建立专门的领域词典，以提高情感分类的准确性，比如建立新的网络词汇词典，来更准确的把握新词的情感倾向。</p><p>本系统基于情感词典的方法，先对文本进行分词和停用词处理等预处理，再利用预先构建好的情感词典，对文本进行字符串匹配，从而挖掘正面和负面信息。其大致流程如图所示：</p><div align=center><img src="https://raw.githubusercontent.com/FallonXC/blogImg/main/C861%E6%83%85%E6%84%9F%E5%88%86%E6%9E%90%E6%B5%81%E7%A8%8B%E5%9B%BE.png" alt="系统架构" width="700"></div><br><center>情感分析流程图</center><h2 id="4-作品亮点"><a href="#4-作品亮点" class="headerlink" title="4.作品亮点"></a><strong>4.作品亮点</strong></h2><h4 id="4-1旅行路线自定义"><a href="#4-1旅行路线自定义" class="headerlink" title="4.1旅行路线自定义"></a>4.1旅行路线自定义</h4><p>背包客可以进行短时间旅游路线自主规划，并且可在可视化界面中对系统推荐的路线进行自定义修改；</p><h4 id="4-2全市景点在线浏览"><a href="#4-2全市景点在线浏览" class="headerlink" title="4.2全市景点在线浏览"></a>4.2全市景点在线浏览</h4><p>背包客可在此系统中浏览全市景点信息，了解各个旅游景点基本信息；</p><h4 id="4-3旅行选址建议"><a href="#4-3旅行选址建议" class="headerlink" title="4.3旅行选址建议"></a>4.3旅行选址建议</h4><p>本系统可对背包客短时间旅游路线选址提供具有建设性的建议；</p><h4 id="4-4结合情感分析技术，深入了解全市各景点"><a href="#4-4结合情感分析技术，深入了解全市各景点" class="headerlink" title="4.4结合情感分析技术，深入了解全市各景点"></a>4.4结合情感分析技术，深入了解全市各景点</h4><p>采用Python网络爬虫技术，对广州市各景点的社交网络评论进行爬取，并对爬取文本从“生态环境”、“门票价格”、“配套设施”、“其他特色”采用情感分析技术分别进行得分计算，统计得出“总体得分”，并制作五维图供背包客对景点深入了解。</p>]]></content>
      
      
      <categories>
          
          <category> esri </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 项目 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      
        <title>three.js gltf 模型转换为three.points点云模型</title>
      
      <link href="/2023/09/28/three.js%20gltf%E6%A8%A1%E5%9E%8B%E8%BD%AC%E6%8D%A2%E4%B8%BApoints/"/>
      <url>/2023/09/28/three.js%20gltf%E6%A8%A1%E5%9E%8B%E8%BD%AC%E6%8D%A2%E4%B8%BApoints/</url>
      
        <content type="html"><![CDATA[<p>three.js Gltf模型转换为three.points点云模型</p><h2 id="背景需求"><a href="#背景需求" class="headerlink" title="背景需求"></a>背景需求</h2><ol><li>对gltf格式的点云模型进行测距，调用three.js提供的raycaster射线无法穿透选中；</li><li>通过官网示例发现有相应实现点云点捕捉的代码，其格式为three.Points，因而存在需求将gltf点云模型转换成three.points模型；</li></ol><h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">import</span> <span class="token punctuation">{</span> GLTFLoader <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"three/examples/jsm/loaders/GLTFLoader"</span><span class="token punctuation">;</span><span class="token keyword">const</span> loader <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">GLTFLoader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>loader<span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span>gltfurl<span class="token punctuation">,</span>     <span class="token punctuation">(</span>gltf<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>        <span class="token keyword">let</span> mesh <span class="token operator">=</span> gltf<span class="token punctuation">.</span>scene<span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">// 获取几何体和材质</span>        <span class="token keyword">const</span> geometry <span class="token operator">=</span> gltf<span class="token punctuation">.</span>scene<span class="token punctuation">.</span>children<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>geometry<span class="token punctuation">;</span>        <span class="token keyword">const</span> material <span class="token operator">=</span> gltf<span class="token punctuation">.</span>scene<span class="token punctuation">.</span>children<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>material<span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 创建three.points对象</span>        <span class="token keyword">const</span> particles <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>Points</span><span class="token punctuation">(</span>geometry<span class="token punctuation">,</span> material<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 设置中心点，方便点云数据切片多次加载，看需要添加</span>        particles<span class="token punctuation">.</span>position<span class="token punctuation">.</span>x <span class="token operator">=</span> x<span class="token punctuation">;</span>        particles<span class="token punctuation">.</span>position<span class="token punctuation">.</span>y <span class="token operator">=</span> y<span class="token punctuation">;</span>        particles<span class="token punctuation">.</span>position<span class="token punctuation">.</span>z <span class="token operator">=</span> z<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>scene<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>particles<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 将模型引入three</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    undefined<span class="token punctuation">,</span>    <span class="token keyword">function</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>        console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> three.js </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 功能 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      
        <title>three.js 测距功能实现</title>
      
      <link href="/2023/09/27/three.js%20%E6%B5%8B%E8%B7%9D%E5%8A%9F%E8%83%BD%E5%AE%9E%E7%8E%B0/"/>
      <url>/2023/09/27/three.js%20%E6%B5%8B%E8%B7%9D%E5%8A%9F%E8%83%BD%E5%AE%9E%E7%8E%B0/</url>
      
        <content type="html"><![CDATA[<p>three.js 测距功能实现</p><h1 id="three-js-测距功能实现"><a href="#three-js-测距功能实现" class="headerlink" title="three.js 测距功能实现"></a>three.js 测距功能实现</h1><h2 id="背景需求"><a href="#背景需求" class="headerlink" title="背景需求"></a>背景需求</h2><ol><li>对三维模型进行测距；</li><li>共两个按钮：测距、清空；</li></ol><h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><ol><li><p>html设置</p><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>primary<span class="token punctuation">"</span></span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span> <span class="token property">z-index</span><span class="token punctuation">:</span> <span class="token number">999</span><span class="token punctuation">;</span> <span class="token property">right</span><span class="token punctuation">:</span> <span class="token number">80</span>px</span><span class="token punctuation">"</span></span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>measureDis<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>测距<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-button</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>primary<span class="token punctuation">"</span></span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span> <span class="token property">z-index</span><span class="token punctuation">:</span> <span class="token number">999</span><span class="token punctuation">;</span> <span class="token property">right</span><span class="token punctuation">:</span> <span class="token number">5</span>px</span><span class="token punctuation">"</span></span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>clearDraw()<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>清除<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-button</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>data设置</p><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token punctuation">{</span>      raycaster<span class="token punctuation">:</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>Raycaster</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>      mouse<span class="token punctuation">:</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>Vector2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>      group<span class="token punctuation">:</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>Group</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>      labelRenderer<span class="token punctuation">:</span> <span class="token keyword">new</span> <span class="token class-name">CSS2DRenderer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>      groups<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>      points<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>      line<span class="token punctuation">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>      measuring<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>init初始化函数</p><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">//普通2D标签</span>    <span class="token keyword">let</span> contain <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"container"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 获取three.js的显示框id</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>labelRenderer<span class="token punctuation">.</span><span class="token function">setSize</span><span class="token punctuation">(</span>contain<span class="token punctuation">.</span>offsetWidth<span class="token punctuation">,</span> contain<span class="token punctuation">.</span>offsetHeight<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 设置three.js的显示框大小</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>labelRenderer<span class="token punctuation">.</span>domElement<span class="token punctuation">.</span>style<span class="token punctuation">.</span>position <span class="token operator">=</span> <span class="token string">"absolute"</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 设置three.js的显示框位置</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>labelRenderer<span class="token punctuation">.</span>domElement<span class="token punctuation">.</span>style<span class="token punctuation">.</span>top <span class="token operator">=</span> <span class="token string">"8%"</span><span class="token punctuation">;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>labelRenderer<span class="token punctuation">.</span>domElement<span class="token punctuation">.</span>style<span class="token punctuation">.</span>right <span class="token operator">=</span> <span class="token string">"1%"</span><span class="token punctuation">;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>labelRenderer<span class="token punctuation">.</span>domElement<span class="token punctuation">.</span>style<span class="token punctuation">.</span>pointerEvents <span class="token operator">=</span> <span class="token string">"none"</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 避免HTML标签遮挡三维场景的鼠标事件</span>    document<span class="token punctuation">.</span>body<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>labelRenderer<span class="token punctuation">.</span>domElement<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 将labelRenderer添加到文档主体</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>render标签渲染</p><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">this</span><span class="token punctuation">.</span>labelRenderer<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>scene<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>camera<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>mounted设置</p><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token function">mounted</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">animate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    window<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">"resize"</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>onWindowResize<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 监测click</span>    window<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">"click"</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>event<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>measuring<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">onclick</span><span class="token punctuation">(</span>event<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>scene<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>group<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>methods设置</p><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token comment" spellcheck="true">// 窗口大小改变时更新的渲染器和相机，保持渲染画面的正确</span><span class="token function">onWindowResize</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">const</span> newWidth <span class="token operator">=</span> window<span class="token punctuation">.</span>innerWidth<span class="token punctuation">;</span>    <span class="token keyword">const</span> newHeight <span class="token operator">=</span> window<span class="token punctuation">.</span>innerHeight<span class="token punctuation">;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>camera<span class="token punctuation">.</span>aspect <span class="token operator">=</span> newWidth <span class="token operator">/</span> newHeight<span class="token punctuation">;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>camera<span class="token punctuation">.</span><span class="token function">updateProjectionMatrix</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>renderer<span class="token punctuation">.</span><span class="token function">setSize</span><span class="token punctuation">(</span>newWidth<span class="token punctuation">,</span> newHeight<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token comment" spellcheck="true">// click捕捉函数</span><span class="token function">onclick</span><span class="token punctuation">(</span>event<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// 获取鼠标点击的坐标</span>    <span class="token keyword">const</span> mouseX <span class="token operator">=</span> event<span class="token punctuation">.</span>clientX<span class="token punctuation">;</span>    <span class="token keyword">const</span> mouseY <span class="token operator">=</span> event<span class="token punctuation">.</span>clientY<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 获取three.js场景的容器</span>    <span class="token keyword">let</span> container <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"container"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 将鼠标坐标转换为Three.js坐标系中的位置</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>mouse<span class="token punctuation">.</span>x <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>mouseX <span class="token operator">-</span> container<span class="token punctuation">.</span><span class="token function">getBoundingClientRect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>left<span class="token punctuation">)</span> <span class="token operator">/</span> container<span class="token punctuation">.</span>offsetWidth<span class="token punctuation">)</span> <span class="token operator">*</span><span class="token number">2</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>mouse<span class="token punctuation">.</span>y <span class="token operator">=</span> <span class="token operator">-</span><span class="token punctuation">(</span><span class="token punctuation">(</span>mouseY <span class="token operator">-</span> container<span class="token punctuation">.</span><span class="token function">getBoundingClientRect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>top<span class="token punctuation">)</span> <span class="token operator">/</span> container<span class="token punctuation">.</span>offsetHeight<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">2</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 设置穿透的射线</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>raycaster<span class="token punctuation">.</span>params<span class="token punctuation">.</span>Points<span class="token punctuation">.</span>threshold <span class="token operator">=</span> <span class="token number">0.3</span><span class="token punctuation">;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>raycaster<span class="token punctuation">.</span><span class="token function">setFromCamera</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>mouse<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>camera<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 获取射线和场景中对象的交点</span>    <span class="token keyword">const</span> intersects <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>raycaster<span class="token punctuation">.</span><span class="token function">intersectObjects</span><span class="token punctuation">(</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>scene<span class="token punctuation">.</span>children<span class="token punctuation">,</span>        <span class="token boolean">false</span>    <span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 如果存在多个交点数则取第一个</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>intersects<span class="token punctuation">.</span>length <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">const</span> point <span class="token operator">=</span> intersects<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>point<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">addPoint</span><span class="token punctuation">(</span>point<span class="token punctuation">.</span>x<span class="token punctuation">,</span> point<span class="token punctuation">.</span>y<span class="token punctuation">,</span> point<span class="token punctuation">.</span>z<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token function">addPoint</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> z<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// 创建点对象</span>    <span class="token keyword">const</span> point <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">createPoint</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> z<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 一个为场景对象</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>group<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>point<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>groups<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>point<span class="token punctuation">)</span><span class="token punctuation">;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>group<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 将点的坐标保存到数组中</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>points<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>Vector3</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> z<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 更新测量线</span>    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">updateMeasurementLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token function">updateMeasurementLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>points<span class="token punctuation">.</span>length <span class="token operator">>=</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// 创建线的几何体和材质</span>        <span class="token keyword">const</span> lineGeometry <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>BufferGeometry</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setFromPoints</span><span class="token punctuation">(</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>points        <span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">const</span> lineMaterial <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>LineBasicMaterial</span><span class="token punctuation">(</span><span class="token punctuation">{</span>            color<span class="token punctuation">:</span> <span class="token number">0xf9f8ed</span><span class="token punctuation">,</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 创建线对象</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>line<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>line <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>Line</span><span class="token punctuation">(</span>lineGeometry<span class="token punctuation">,</span> lineMaterial<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>group<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>line<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>groups<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>line<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">//   this.line.geometry.dispose();</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>line<span class="token punctuation">.</span>geometry <span class="token operator">=</span> lineGeometry<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">// 计算距离并显示在界面上</span>        <span class="token keyword">const</span> distance <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>points<span class="token punctuation">[</span><span class="token keyword">this</span><span class="token punctuation">.</span>points<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">distanceTo</span><span class="token punctuation">(</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>points<span class="token punctuation">[</span><span class="token keyword">this</span><span class="token punctuation">.</span>points<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span>        <span class="token punctuation">)</span><span class="token punctuation">;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token string">`距离: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>distance<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 添加CSS 2DObject标签</span>        <span class="token comment" spellcheck="true">// 求中点坐标</span>        <span class="token keyword">let</span> centerX <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>points<span class="token punctuation">[</span><span class="token keyword">this</span><span class="token punctuation">.</span>points<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">.</span>x <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>points<span class="token punctuation">[</span><span class="token keyword">this</span><span class="token punctuation">.</span>points<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>x<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span>        <span class="token keyword">let</span> centerY <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>points<span class="token punctuation">[</span><span class="token keyword">this</span><span class="token punctuation">.</span>points<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">.</span>y <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>points<span class="token punctuation">[</span><span class="token keyword">this</span><span class="token punctuation">.</span>points<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>y<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span>        <span class="token keyword">let</span> centerZ <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>points<span class="token punctuation">[</span><span class="token keyword">this</span><span class="token punctuation">.</span>points<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">.</span>z <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>points<span class="token punctuation">[</span><span class="token keyword">this</span><span class="token punctuation">.</span>points<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>z<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">//创建标签</span>        <span class="token keyword">const</span> container <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"container"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">const</span> earthDiv <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">"div"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        earthDiv<span class="token punctuation">.</span>className <span class="token operator">=</span> <span class="token string">"label_name"</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 定义的类名可以通过下面的style进行设置样式</span>        earthDiv<span class="token punctuation">.</span>textContent <span class="token operator">=</span> distance<span class="token punctuation">.</span><span class="token function">toFixed</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">" m"</span><span class="token punctuation">;</span>        earthDiv<span class="token punctuation">.</span>style<span class="token punctuation">.</span>marginTop <span class="token operator">=</span> <span class="token string">"-1em"</span><span class="token punctuation">;</span>        <span class="token keyword">const</span> label2D <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CSS2DObject</span><span class="token punctuation">(</span>earthDiv<span class="token punctuation">)</span><span class="token punctuation">;</span>        label2D<span class="token punctuation">.</span>name <span class="token operator">=</span> distance<span class="token punctuation">.</span><span class="token function">toFixed</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        label2D<span class="token punctuation">.</span>position<span class="token punctuation">.</span><span class="token keyword">set</span><span class="token punctuation">(</span>centerX<span class="token punctuation">,</span> centerY<span class="token punctuation">,</span> centerZ<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//标签标注在obj世界坐标</span>        container<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>label2D<span class="token punctuation">.</span>element<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>group<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>label2D<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//标签插入场景</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>groups<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>label2D<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// this.labelRenderer.scene.add(label2D);</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>labelRenderer<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>scene<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>camera<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token function">measureDis</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>measuring <span class="token operator">=</span> <span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>measuring<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token function">clearDraw</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>scene<span class="token punctuation">.</span>children<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 移除this.groups中保存的所有对象</span>    <span class="token comment" spellcheck="true">// 注：不直接使用this.scene.children进行遍历，是因为遍历结果不全面无法得到页面所有Mesh有待商催</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>groups<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span>object<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>object<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>object<span class="token punctuation">.</span>type <span class="token operator">===</span> <span class="token string">"Mesh"</span> <span class="token operator">||</span> object<span class="token punctuation">.</span>type <span class="token operator">===</span> <span class="token string">"Line"</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>object<span class="token punctuation">.</span>type<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 释放几何体和样式资源</span>            object<span class="token punctuation">.</span>geometry<span class="token punctuation">.</span><span class="token function">dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            object<span class="token punctuation">.</span>material<span class="token punctuation">.</span><span class="token function">dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>group<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span>object<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>object<span class="token punctuation">.</span>type <span class="token operator">===</span> <span class="token string">"Line"</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">this</span><span class="token punctuation">.</span>line <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">// let label = this.scene.getObjectByName(object.name);</span>            object<span class="token punctuation">.</span>parent<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span>object<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>points <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>measuring <span class="token operator">=</span> <span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>measuring<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token function">createPoint</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> z<span class="token punctuation">,</span> config <span class="token operator">=</span> <span class="token punctuation">{</span> color<span class="token punctuation">:</span> <span class="token number">0xf9f8ed</span><span class="token punctuation">,</span> size<span class="token punctuation">:</span> <span class="token number">0.8</span> <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">let</span> mat <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>MeshBasicMaterial</span><span class="token punctuation">(</span><span class="token punctuation">{</span>        color<span class="token punctuation">:</span> config<span class="token punctuation">.</span>color <span class="token operator">||</span> <span class="token number">0xf9f8ed</span><span class="token punctuation">,</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">let</span> sphereGeometry <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>SphereGeometry</span><span class="token punctuation">(</span>config<span class="token punctuation">.</span>size <span class="token operator">||</span> <span class="token number">0.3</span><span class="token punctuation">,</span> <span class="token number">32</span><span class="token punctuation">,</span> <span class="token number">32</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">let</span> sphere <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>Mesh</span><span class="token punctuation">(</span>sphereGeometry<span class="token punctuation">,</span> mat<span class="token punctuation">)</span><span class="token punctuation">;</span>    sphere<span class="token punctuation">.</span>position<span class="token punctuation">.</span><span class="token keyword">set</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> z<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> sphere<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>style设置</p><pre class="line-numbers language-css"><code class="language-css"><span class="token selector"><span class="token class">.label_name</span> </span><span class="token punctuation">{</span>    <span class="token property">color</span><span class="token punctuation">:</span> <span class="token hexcode">#f9f8ed</span><span class="token punctuation">;</span>    <span class="token property">font-size</span><span class="token punctuation">:</span> <span class="token number">16</span>px<span class="token punctuation">;</span>    <span class="token property">z-index</span><span class="token punctuation">:</span> <span class="token number">9999</span> <span class="token important">!important</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li></li></ol>]]></content>
      
      
      <categories>
          
          <category> three.js </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 功能 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      
        <title>Cesium 功能实现</title>
      
      <link href="/2023/09/15/Cesium%E7%AC%94%E8%AE%B0/"/>
      <url>/2023/09/15/Cesium%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<p>Cesium 基础功能实现：初始化、加载影像</p><h2 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h2><pre class="line-numbers language-javascript"><code class="language-javascript">Cesium<span class="token punctuation">.</span>Context<span class="token punctuation">.</span>memoryThreshold <span class="token operator">=</span> <span class="token number">8</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//设置GPU内存阈值为8MB,当GPU内存使用超过这个阈值时，Cesium将开始执行一些优化策略，以降低内存使用并提高性能。</span><span class="token comment" spellcheck="true">//地图将被嵌入到具有ID为machineMap的DOM元素中</span>window<span class="token punctuation">.</span>machineMap <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Cesium<span class="token punctuation">.</span>Viewer</span><span class="token punctuation">(</span><span class="token string">"machineMap"</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>  shadows<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">//确定阴影是否由太阳投射形成。</span>  sceneModePicker<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">//获取场景模式拾取器(SceneModePicker)对象。</span>  infoBox<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">//获取信息框(InfoBox)对象。</span>  shouldAnimate<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>  skyAtmosphere<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">//环绕地球边缘的蓝天和光晕效果，设置为false可将其关闭。</span>  selectionIndicator<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">//获取选择指示符(SelectionIndicator)对象。</span>  navigation<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">//获取导航帮助按钮(NavigationHelpButton)对象。</span>  skyBox<span class="token punctuation">:</span> <span class="token keyword">new</span> <span class="token class-name">Cesium<span class="token punctuation">.</span>SkyBox</span><span class="token punctuation">(</span><span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">//用于渲染星辰的天空盒，未定义时，使用默认星辰效果。</span>    sources<span class="token punctuation">:</span> <span class="token punctuation">{</span>      positiveX<span class="token punctuation">:</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"@/assets/img/lt/rightav9.jpg"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>      negativeX<span class="token punctuation">:</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"@/assets/img/lt/leftav9.jpg"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>      positiveY<span class="token punctuation">:</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"@/assets/img/lt/frontav9.jpg"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>      negativeY<span class="token punctuation">:</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"@/assets/img/lt/backav9.jpg"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>      positiveZ<span class="token punctuation">:</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"@/assets/img/lt/topav9.jpg"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>      negativeZ<span class="token punctuation">:</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"@/assets/img/lt/bottomav9.jpg"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">let</span> scene <span class="token operator">=</span> window<span class="token punctuation">.</span>machineMap<span class="token punctuation">.</span>scene<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//获取场景(scene)对象，包含了地图中的三维场景元素和功能</span><span class="token keyword">let</span> widget <span class="token operator">=</span> window<span class="token punctuation">.</span>machineMap<span class="token punctuation">.</span>cesiumWidget<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//获取CesiumWidget对象，用于渲染地图的核心部分</span><span class="token keyword">let</span> credit <span class="token operator">=</span> window<span class="token punctuation">.</span>machineMap<span class="token punctuation">.</span>scene<span class="token punctuation">.</span>frameState<span class="token punctuation">.</span>creditDisplay<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//用于显示地图上的信用标识的对象</span>credit<span class="token punctuation">.</span>container<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span>credit<span class="token punctuation">.</span>_imageContainer<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//从信用标识容器中移除了图像容器，通常是地图底部显示的Cesium图标和文本，即去掉cesium水印</span><span class="token keyword">try</span> <span class="token punctuation">{</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"开启无人机地图"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// 设置相机位置，定位至模型</span>  scene<span class="token punctuation">.</span>camera<span class="token punctuation">.</span><span class="token function">setView</span><span class="token punctuation">(</span><span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// 将经度、纬度、高度的坐标转换为笛卡尔坐标</span>    destination<span class="token punctuation">:</span> Cesium<span class="token punctuation">.</span>Cartesian3<span class="token punctuation">.</span><span class="token function">fromDegrees</span><span class="token punctuation">(</span><span class="token number">116.773446</span><span class="token punctuation">,</span> <span class="token number">23.471069</span><span class="token punctuation">,</span> <span class="token number">4632</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    orientation<span class="token punctuation">:</span> <span class="token punctuation">{</span>      heading<span class="token punctuation">:</span> <span class="token number">0.29510551037694466</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 相机的方向，单位是弧度，默认朝北</span>      pitch<span class="token punctuation">:</span> <span class="token operator">-</span><span class="token number">0.677166982317591</span><span class="token punctuation">,</span>    <span class="token comment" spellcheck="true">// 相机的俯仰角度，单位是弧度，默认是朝下</span>      roll<span class="token punctuation">:</span> <span class="token number">6.283185307179586</span><span class="token punctuation">,</span>      <span class="token comment" spellcheck="true">// 相机的滚动角度，单位是弧度，默认是0</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>widget<span class="token punctuation">.</span>_showRenderLoopErrors<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">var</span> title <span class="token operator">=</span> <span class="token string">"渲染时发生错误，已停止渲染。"</span><span class="token punctuation">;</span>    widget<span class="token punctuation">.</span><span class="token function">showErrorPanel</span><span class="token punctuation">(</span>title<span class="token punctuation">,</span> undefined<span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="Viewer设置"><a href="#Viewer设置" class="headerlink" title="Viewer设置"></a>Viewer设置</h2><pre class="line-numbers language-javascript"><code class="language-javascript">window<span class="token punctuation">.</span>machineMap <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Cesium<span class="token punctuation">.</span>Viewer</span><span class="token punctuation">(</span><span class="token string">"machineMap"</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>  shadows<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">//确定阴影是否由太阳投射形成。</span>  sceneModePicker<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">//获取场景模式拾取器(SceneModePicker)对象。</span>  infoBox<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">//获取信息框(InfoBox)对象。</span>  shouldAnimate<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>  skyAtmosphere<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">//环绕地球边缘的蓝天和光晕效果，设置为false可将其关闭。</span>  selectionIndicator<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">//获取选择指示符(SelectionIndicator)对象。</span>  navigation<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">//获取导航帮助按钮(NavigationHelpButton)对象。</span>  skyBox<span class="token punctuation">:</span> <span class="token keyword">new</span> <span class="token class-name">Cesium<span class="token punctuation">.</span>SkyBox</span><span class="token punctuation">(</span><span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">//用于渲染星辰的天空盒，未定义时，使用默认星辰效果。</span>    sources<span class="token punctuation">:</span> <span class="token punctuation">{</span>      positiveX<span class="token punctuation">:</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"@/assets/img/lt/rightav9.jpg"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>      negativeX<span class="token punctuation">:</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"@/assets/img/lt/leftav9.jpg"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>      positiveY<span class="token punctuation">:</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"@/assets/img/lt/frontav9.jpg"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>      negativeY<span class="token punctuation">:</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"@/assets/img/lt/backav9.jpg"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>      positiveZ<span class="token punctuation">:</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"@/assets/img/lt/topav9.jpg"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>      negativeZ<span class="token punctuation">:</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"@/assets/img/lt/bottomav9.jpg"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="相机设置"><a href="#相机设置" class="headerlink" title="相机设置"></a>相机设置</h2><pre class="line-numbers language-javascript"><code class="language-javascript">scene<span class="token punctuation">.</span>camera<span class="token punctuation">.</span><span class="token function">setView</span><span class="token punctuation">(</span><span class="token punctuation">{</span>  <span class="token comment" spellcheck="true">// 将经度、纬度、高度的坐标转换为笛卡尔坐标</span>  destination<span class="token punctuation">:</span> Cesium<span class="token punctuation">.</span>Cartesian3<span class="token punctuation">.</span><span class="token function">fromDegrees</span><span class="token punctuation">(</span><span class="token number">116.773446</span><span class="token punctuation">,</span> <span class="token number">23.471069</span><span class="token punctuation">,</span> <span class="token number">4632</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  orientation<span class="token punctuation">:</span> <span class="token punctuation">{</span>    heading<span class="token punctuation">:</span> <span class="token number">0.29510551037694466</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 相机的方向，单位是弧度，默认朝北</span>    pitch<span class="token punctuation">:</span> <span class="token operator">-</span><span class="token number">0.677166982317591</span><span class="token punctuation">,</span>    <span class="token comment" spellcheck="true">// 相机的俯仰角度，单位是弧度，默认是朝下</span>    roll<span class="token punctuation">:</span> <span class="token number">6.283185307179586</span><span class="token punctuation">,</span>      <span class="token comment" spellcheck="true">// 相机的滚动角度，单位是弧度，默认是0</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="加载影像"><a href="#加载影像" class="headerlink" title="加载影像"></a>加载影像</h2><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">loadTDT</span><span class="token punctuation">(</span>viewer<span class="token punctuation">,</span> node<span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">let</span> tdtUrl <span class="token operator">=</span> <span class="token string">"https://t{s}.tianditu.gov.cn/"</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 天地图</span>  <span class="token keyword">let</span> subdomains <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"0"</span><span class="token punctuation">,</span> <span class="token string">"1"</span><span class="token punctuation">,</span> <span class="token string">"2"</span><span class="token punctuation">,</span> <span class="token string">"3"</span><span class="token punctuation">,</span> <span class="token string">"4"</span><span class="token punctuation">,</span> <span class="token string">"5"</span><span class="token punctuation">,</span> <span class="token string">"6"</span><span class="token punctuation">,</span> <span class="token string">"7"</span><span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// 如果node.mapid不为null，则从viewer的imageryLayers中移除该ID对应的图层。</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>node<span class="token punctuation">.</span>mapid <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> viewer<span class="token punctuation">.</span>imageryLayers<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span>mapid<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// 向viewer的imageryLayers添加一个新的影像提供者，并将其ID赋值给node.mapid</span>  node<span class="token punctuation">.</span>mapid <span class="token operator">=</span> viewer<span class="token punctuation">.</span>imageryLayers<span class="token punctuation">.</span><span class="token function">addImageryProvider</span><span class="token punctuation">(</span>    <span class="token keyword">new</span> <span class="token class-name">Cesium<span class="token punctuation">.</span>UrlTemplateImageryProvider</span><span class="token punctuation">(</span><span class="token punctuation">{</span>      url<span class="token punctuation">:</span> tdtUrl <span class="token operator">+</span>        <span class="token string">"DataServer?T="</span> <span class="token operator">+</span>        node<span class="token punctuation">.</span>mapStyle <span class="token operator">+</span>        <span class="token string">"&amp;x={x}&amp;y={y}&amp;l={z}&amp;tk="</span> <span class="token operator">+</span>        node<span class="token punctuation">.</span>token<span class="token punctuation">,</span>      subdomains<span class="token punctuation">:</span> subdomains<span class="token punctuation">,</span>      tilingScheme<span class="token punctuation">:</span> <span class="token keyword">new</span> <span class="token class-name">Cesium<span class="token punctuation">.</span>WebMercatorTilingScheme</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>      maximumLevel<span class="token punctuation">:</span> <span class="token number">18</span><span class="token punctuation">,</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span>  <span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">// URL模板中的{s}会被替换为subdomains数组中的一个元素，也就是一个子域名。这意味着，每次请求影像数据时，都会从这八个子域名中选择一个来用。</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">loadTIN</span><span class="token punctuation">(</span>viewer<span class="token punctuation">,</span> node<span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">let</span> terrainProvider <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Cesium<span class="token punctuation">.</span>CesiumTerrainProvider</span><span class="token punctuation">(</span><span class="token punctuation">{</span>    url<span class="token punctuation">:</span> data_url<span class="token punctuation">,</span>    isSct<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 表示使用SCT（Scaled and Offset Terrain）地形数据格式</span>    requestVertexNormals<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 表示是否请求顶点法线信息</span>    requestWaterMask<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 表示是否请求水面遮罩信息</span>  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  viewer<span class="token punctuation">.</span>terrainProvider <span class="token operator">=</span> terrainProvider<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Cesium </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 示例 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      
        <title>vue导出excel、txt、csv文件</title>
      
      <link href="/2023/09/13/vue%E5%AF%BC%E5%87%BAexcel%E3%80%81txt%E3%80%81csv%E6%96%87%E4%BB%B6/"/>
      <url>/2023/09/13/vue%E5%AF%BC%E5%87%BAexcel%E3%80%81txt%E3%80%81csv%E6%96%87%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<p>基于xlsx、file-saver库导出excel、txt、csv文件</p><h3 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h3><ul><li>需求：提供网页excel、txt、csv下载功能；</li></ul><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><ul><li>xlsx</li></ul><pre class="line-numbers language-vue"><code class="language-vue">npm install -g xlsx@0.16.0 --save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-vue"><code class="language-vue">import * as XLSX from "xlsx";<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-vue"><code class="language-vue">createExcel(name, data) {  // 获取当前日期时间  const now = new Date();  // 构建文件名  const year = now.getFullYear();  const month = (now.getMonth() + 1).toString().padStart(2, "0");  const day = now.getDate().toString().padStart(2, "0");  const fileName = `job_${name}${year}${month}${day}.xlsx`;  console.log(fileName); // 输出类似于 "20230828.xlsx"  // 创建工作簿和工作表  // 数据为json格式  const ws = XLSX.utils.json_to_sheet(data);  const wb = XLSX.utils.book_new();  XLSX.utils.book_append_sheet(wb, ws, "Sheet1"); // Sheet1 是工作表的名称  // 将工作簿写入文件  XLSX.writeFile(wb, fileName); // 文件名为 example.xlsx}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>txt</li></ul><pre class="line-numbers language-vue"><code class="language-vue">npm install --save file-saver<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-vue"><code class="language-vue">import { saveAs } from "file-saver";<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-vue"><code class="language-vue">createTXT(name, data) {  // 获取当前日期时间  const now = new Date();  // 构建文件名  const year = now.getFullYear();  const month = (now.getMonth() + 1).toString().padStart(2, "0");  const day = now.getDate().toString().padStart(2, "0");  const fileName = `job_${name}${year}${month}${day}.txt`;    // data为需要输入的字符串，注意需要添加[]  const file = new File([data], fileName, {    type: "text/plain;charset=utf-8",  });  saveAs(file);}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>csv：与txt方法相同</li></ul><pre class="line-numbers language-vue"><code class="language-vue">createCSV(name, data) {  // 获取当前日期时间  const now = new Date();  // 构建文件名  const year = now.getFullYear();  const month = (now.getMonth() + 1).toString().padStart(2, "0");  const day = now.getDate().toString().padStart(2, "0");  const fileName = `job_${name}${year}${month}${day}.csv`;  // 步骤 2: 将数据转换为 CSV 字符串  data = data.map((row) => row.join(",")).join("\n");  const file = new File([data], fileName, {    type: "text/csv",  });  saveAs(file);}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 功能 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      
        <title>Nginx服务器配置</title>
      
      <link href="/2023/09/11/Nginx%E6%9C%8D%E5%8A%A1%E5%99%A8%E9%85%8D%E7%BD%AE/"/>
      <url>/2023/09/11/Nginx%E6%9C%8D%E5%8A%A1%E5%99%A8%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<p>Nginx服务器配置</p><h1 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h1><ul><li>需求：将本地项目build后同时放到云服务器上，或解决跨域问题；</li></ul><h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><pre class="line-numbers language-nginx"><code class="language-nginx"><span class="token keyword">server</span><span class="token punctuation">{</span>  <span class="token keyword">listen</span> <span class="token number">7444</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true"># 监听的接口</span>  <span class="token keyword">server</span> name <span class="token number">139.159</span><span class="token punctuation">.</span><span class="token number">202.250</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true"># localhost或者本地的IP</span>  <span class="token keyword">location</span> <span class="token operator">/</span> <span class="token punctuation">{</span>    <span class="token keyword">root</span> C<span class="token punctuation">:</span><span class="token operator">/</span>ins<span class="token operator">/</span>lot<span class="token punctuation">;</span>    try files <span class="token variable">$uri</span> <span class="token variable">$uri</span><span class="token operator">/</span> <span class="token operator">/</span><span class="token keyword">index</span><span class="token punctuation">.</span>html  <span class="token punctuation">}</span>  <span class="token comment" spellcheck="true"># 跨域配置</span>  <span class="token keyword">location</span> <span class="token operator">/</span>app <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true"># 在这里配置跨域规则</span>    add header <span class="token string">'Access-Control-Allow-Origin'</span><span class="token punctuation">;</span>    add header'Access<span class="token operator">-</span>Control<span class="token operator">-</span>A11ow<span class="token operator">-</span>Methods<span class="token string">""</span>GET，POST，OPTIONS<span class="token punctuation">;</span>    <span class="token keyword">proxy_pass</span> <span class="token keyword">https</span><span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>geoapp<span class="token punctuation">.</span>gzpi<span class="token punctuation">.</span>com<span class="token punctuation">.</span>cn<span class="token operator">/</span>ddy_yp<span class="token punctuation">;</span> <span class="token comment" spellcheck="true"># 代理到前端应用</span>    <span class="token keyword">proxy</span> <span class="token keyword">set</span> header Host <span class="token variable">$host</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><a name="ConP6"></a></p><h1 id="问题解决"><a href="#问题解决" class="headerlink" title="问题解决"></a>问题解决</h1><ol><li>端口长度问题：nginx: [emerg] could not build server_names_hash, you should increase server_names_hash_bucket_size: 32</li></ol><pre class="line-numbers language-nginx"><code class="language-nginx"><span class="token keyword">server_names_hash_bucket_size</span> <span class="token number">64</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true"># 根据需要适当调整大小</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ol start="2"><li>出现&#x2F;assets无法定位的问题</li></ol><pre class="line-numbers language-nginx"><code class="language-nginx"><span class="token keyword">location</span> <span class="token operator">/</span>assets <span class="token punctuation">{</span>  <span class="token keyword">alias</span> <span class="token operator">/</span>path<span class="token operator">/</span>to<span class="token operator">/</span>your<span class="token operator">/</span>assets<span class="token operator">/</span>directory<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><ol start="3"><li>扩展：alias和root区别<ol><li><strong>root</strong>：</li></ol><ul><li><strong>root</strong> 指令用于设置一个根目录，它定义了一个基本的文件系统路径，用于构建请求的最终文件路径。</li><li>当使用 <strong>root</strong> 时，Nginx 会将请求的 URI 直接附加到根目录，构成请求的文件路径。例如，如果根目录是 <strong>&#x2F;var&#x2F;www</strong>，并且请求的 URI 是 <strong>&#x2F;images&#x2F;pic.jpg</strong>，则最终的文件路径将是 <strong>&#x2F;var&#x2F;www&#x2F;images&#x2F;pic.jpg</strong>。</li><li><strong>root</strong> 通常用于处理静态文件，例如 HTML、CSS、JavaScript 文件等。它适用于在请求中保留 URI 结构的情况。</li></ul></li></ol><pre class="line-numbers language-nginx"><code class="language-nginx"><span class="token keyword">location</span> <span class="token operator">/</span>static<span class="token operator">/</span> <span class="token punctuation">{</span>  <span class="token keyword">root</span> <span class="token operator">/</span>var<span class="token operator">/</span>www<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><ol start="2"><li><strong>alias</strong>：</li></ol><ul><li><strong>alias</strong> 指令用于指定一个别名，它可以更灵活地映射请求的 URI 到文件系统的不同位置。</li><li>当使用 <strong>alias</strong> 时，Nginx 会将请求的 URI 替换为指定的别名路径，然后寻找文件。这意味着你可以将请求的 URI 与文件系统的实际路径完全分开。</li><li><strong>alias</strong> 通常用于处理特定类型的请求，例如代理服务器中的 URL 重写或者处理文件存储在不同位置的情况。</li></ul><pre class="line-numbers language-nginx"><code class="language-nginx"><span class="token keyword">location</span> <span class="token operator">/</span>images<span class="token operator">/</span> <span class="token punctuation">{</span>  <span class="token keyword">alias</span> <span class="token operator">/</span>var<span class="token operator">/</span>www<span class="token operator">/</span>images<span class="token operator">/</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> ngnix </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 配置 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      
        <title>Echarts 时间轴监听事件</title>
      
      <link href="/2023/08/30/Echarts%20%E6%97%B6%E9%97%B4%E8%BD%B4%E7%9B%91%E5%90%AC%E4%BA%8B%E4%BB%B6/"/>
      <url>/2023/08/30/Echarts%20%E6%97%B6%E9%97%B4%E8%BD%B4%E7%9B%91%E5%90%AC%E4%BA%8B%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<p>Echarts 时间轴监听事件</p><h2 id="1-背景"><a href="#1-背景" class="headerlink" title="1. 背景"></a>1. 背景</h2><ul><li>需求：通过页面某个组件内时间轴的变化控制其他组件的echarts的数据变化；</li></ul><div align=center><img src="https://raw.githubusercontent.com/FallonXC/blogImg/main/clip_image002.gif" alt="系统功能" width="700"></div><h2 id="2-解决方法"><a href="#2-解决方法" class="headerlink" title="2. 解决方法"></a>2. 解决方法</h2><div align=center><img src="https://raw.githubusercontent.com/FallonXC/blogImg/main/clip_image004.gif" alt="系统功能" width="700"></div><ul><li>vue监听代码</li></ul><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">this</span><span class="token punctuation">.</span>myChart_3<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">"timelinechanged"</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>params<span class="token punctuation">)</span> <span class="token punctuation">{</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>params<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>params<span class="token punctuation">.</span>type <span class="token operator">===</span> <span class="token string">"timelinechanged"</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>   console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>params<span class="token punctuation">.</span>currentIndex<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>网页监听：可监听到自动切换、点击事件；</li></ul><div align=center><img src="https://raw.githubusercontent.com/FallonXC/blogImg/main/clip_image006.gif" alt="系统功能" width="700"></div><ul><li>时间轴配置项</li></ul><pre class="line-numbers language-javascript"><code class="language-javascript">timeline<span class="token punctuation">:</span> <span class="token punctuation">{</span>  tooltip<span class="token punctuation">:</span> <span class="token punctuation">{</span>   show<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 播放和前进后退去掉</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  data<span class="token punctuation">:</span> years<span class="token punctuation">,</span>  axisType<span class="token punctuation">:</span> <span class="token string">"category"</span><span class="token punctuation">,</span>  autoPlay<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 自动播放</span>  triggerEvent<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 事件捕捉</span>  playInterval<span class="token punctuation">:</span> <span class="token number">5000</span><span class="token punctuation">,</span>  left<span class="token punctuation">:</span> <span class="token string">"10%"</span><span class="token punctuation">,</span>  right<span class="token punctuation">:</span> <span class="token string">"10%"</span><span class="token punctuation">,</span>  bottom<span class="token punctuation">:</span> <span class="token string">"2%"</span><span class="token punctuation">,</span>  width<span class="token punctuation">:</span> <span class="token string">"80%"</span><span class="token punctuation">,</span>  <span class="token comment" spellcheck="true">// height: null,</span>  label<span class="token punctuation">:</span> <span class="token punctuation">{</span>   normal<span class="token punctuation">:</span> <span class="token punctuation">{</span>    textStyle<span class="token punctuation">:</span> <span class="token punctuation">{</span>     color<span class="token punctuation">:</span> <span class="token string">"#ddd"</span><span class="token punctuation">,</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>   <span class="token punctuation">}</span><span class="token punctuation">,</span>   emphasis<span class="token punctuation">:</span> <span class="token punctuation">{</span>    textStyle<span class="token punctuation">:</span> <span class="token punctuation">{</span>     color<span class="token punctuation">:</span> <span class="token string">"#fff"</span><span class="token punctuation">,</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>   <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  symbolSize<span class="token punctuation">:</span> <span class="token number">10</span><span class="token punctuation">,</span>  lineStyle<span class="token punctuation">:</span> <span class="token punctuation">{</span>   color<span class="token punctuation">:</span> <span class="token string">"#555"</span><span class="token punctuation">,</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  checkpointStyle<span class="token punctuation">:</span> <span class="token punctuation">{</span>   borderColor<span class="token punctuation">:</span> <span class="token string">"#777"</span><span class="token punctuation">,</span>   borderWidth<span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  controlStyle<span class="token punctuation">:</span> <span class="token punctuation">{</span>   showNextBtn<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>   showPrevBtn<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>   normal<span class="token punctuation">:</span> <span class="token punctuation">{</span>    color<span class="token punctuation">:</span> <span class="token string">"#666"</span><span class="token punctuation">,</span>    borderColor<span class="token punctuation">:</span> <span class="token string">"#666"</span><span class="token punctuation">,</span>   <span class="token punctuation">}</span><span class="token punctuation">,</span>   emphasis<span class="token punctuation">:</span> <span class="token punctuation">{</span>    color<span class="token punctuation">:</span> <span class="token string">"#aaa"</span><span class="token punctuation">,</span>    borderColor<span class="token punctuation">:</span> <span class="token string">"#aaa"</span><span class="token punctuation">,</span>   <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Echarts </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 功能 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      
        <title>vue2导入svg</title>
      
      <link href="/2023/08/24/vue2%E5%AF%BC%E5%85%A5svg/"/>
      <url>/2023/08/24/vue2%E5%AF%BC%E5%85%A5svg/</url>
      
        <content type="html"><![CDATA[<h2 id="第一步：src-components目录下新建SvgIcon文件夹，文件夹下新建index-vue文件"><a href="#第一步：src-components目录下新建SvgIcon文件夹，文件夹下新建index-vue文件" class="headerlink" title="第一步：src-&gt;components目录下新建SvgIcon文件夹，文件夹下新建index.vue文件"></a>第一步：src-&gt;components目录下新建SvgIcon文件夹，文件夹下新建index.vue文件</h2><p>示意图：</p><div align=center><img src="https://raw.githubusercontent.com/FallonXC/blogImg/main/svg%E7%A4%BA%E6%84%8F%E5%9B%BE1.png" width="700"></div><br><p>代码：</p><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token operator">&lt;</span>template<span class="token operator">></span>  <span class="token operator">&lt;</span>svg <span class="token punctuation">:</span><span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"svgClass"</span> aria<span class="token operator">-</span>hidden<span class="token operator">=</span><span class="token string">"true"</span><span class="token operator">></span>    <span class="token operator">&lt;</span>use <span class="token punctuation">:</span>xlink<span class="token punctuation">:</span>href<span class="token operator">=</span><span class="token string">"iconName"</span><span class="token operator">/</span><span class="token operator">></span>  <span class="token operator">&lt;</span><span class="token operator">/</span>svg<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">></span><span class="token operator">&lt;</span>script<span class="token operator">></span>  <span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>    name<span class="token punctuation">:</span> <span class="token string">'SvgIcon'</span><span class="token punctuation">,</span>    props<span class="token punctuation">:</span> <span class="token punctuation">{</span>      iconClass<span class="token punctuation">:</span> <span class="token punctuation">{</span>        type<span class="token punctuation">:</span> String<span class="token punctuation">,</span>        required<span class="token punctuation">:</span> <span class="token boolean">true</span>      <span class="token punctuation">}</span><span class="token punctuation">,</span>      className<span class="token punctuation">:</span> <span class="token punctuation">{</span>        type<span class="token punctuation">:</span> String      <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    computed<span class="token punctuation">:</span> <span class="token punctuation">{</span>      <span class="token function">iconName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token template-string"><span class="token string">`#icon-</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token keyword">this</span><span class="token punctuation">.</span>iconClass<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">`</span></span>      <span class="token punctuation">}</span><span class="token punctuation">,</span>      <span class="token function">svgClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>className<span class="token punctuation">)</span> <span class="token punctuation">{</span>          <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>className        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>          <span class="token keyword">return</span> <span class="token string">'svg-icon'</span>        <span class="token punctuation">}</span>      <span class="token punctuation">}</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span class="token operator">&lt;</span>style scoped<span class="token operator">></span>  <span class="token punctuation">.</span>svg<span class="token operator">-</span>icon <span class="token punctuation">{</span>    width<span class="token punctuation">:</span> 2em<span class="token punctuation">;</span>    height<span class="token punctuation">:</span> 2em<span class="token punctuation">;</span>    vertical<span class="token operator">-</span>align<span class="token punctuation">:</span> <span class="token operator">-</span><span class="token number">0</span><span class="token punctuation">.</span>6em<span class="token punctuation">;</span>    fill<span class="token punctuation">:</span> currentColor<span class="token punctuation">;</span>    overflow<span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token punctuation">.</span>nav<span class="token operator">-</span>svg<span class="token operator">-</span>icon<span class="token punctuation">{</span>    width<span class="token punctuation">:</span> 4em<span class="token punctuation">;</span>    height<span class="token punctuation">:</span> 4em<span class="token punctuation">;</span>    vertical<span class="token operator">-</span>align<span class="token punctuation">:</span> <span class="token operator">-</span><span class="token number">0</span><span class="token punctuation">.</span>15em<span class="token punctuation">;</span>    fill<span class="token punctuation">:</span> currentColor<span class="token punctuation">;</span>    overflow<span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>style<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="第二步：src目录下新建icons文件夹，文件夹下新建svg文件夹和index-js文件，svg文件夹用于存放svg文件"><a href="#第二步：src目录下新建icons文件夹，文件夹下新建svg文件夹和index-js文件，svg文件夹用于存放svg文件" class="headerlink" title="第二步：src目录下新建icons文件夹，文件夹下新建svg文件夹和index.js文件，svg文件夹用于存放svg文件"></a>第二步：src目录下新建icons文件夹，文件夹下新建svg文件夹和index.js文件，svg文件夹用于存放svg文件</h2><p>示意图：</p><div align=left><img src="https://raw.githubusercontent.com/FallonXC/blogImg/main/svg%E7%A4%BA%E6%84%8F%E5%9B%BE3.png" width="200"></div><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">import</span> Vue <span class="token keyword">from</span> <span class="token string">'vue'</span><span class="token keyword">import</span> SvgIcon <span class="token keyword">from</span> <span class="token string">'@/components/SvgIcon'</span><span class="token comment" spellcheck="true">// svg component</span><span class="token comment" spellcheck="true">// register globally</span>Vue<span class="token punctuation">.</span><span class="token function">component</span><span class="token punctuation">(</span><span class="token string">'svg-icon'</span><span class="token punctuation">,</span> SvgIcon<span class="token punctuation">)</span><span class="token keyword">const</span> req <span class="token operator">=</span> require<span class="token punctuation">.</span><span class="token function">context</span><span class="token punctuation">(</span><span class="token string">'./svg'</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token regex">/\.svg$/</span><span class="token punctuation">)</span><span class="token keyword">const</span> requireAll <span class="token operator">=</span> requireContext <span class="token operator">=</span><span class="token operator">></span> requireContext<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>requireContext<span class="token punctuation">)</span><span class="token function">requireAll</span><span class="token punctuation">(</span>req<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="第三步：安装插件：svg-sprite-loader"><a href="#第三步：安装插件：svg-sprite-loader" class="headerlink" title="第三步：安装插件：svg-sprite-loader"></a>第三步：安装插件：svg-sprite-loader</h2><p>命令：</p><pre class="line-numbers language-javascript"><code class="language-javascript">npm install svg<span class="token operator">-</span>sprite<span class="token operator">-</span>loader <span class="token operator">--</span>save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="第四步：vue-config-js配置"><a href="#第四步：vue-config-js配置" class="headerlink" title="第四步：vue.config.js配置"></a>第四步：vue.config.js配置</h2><p>代码：</p><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">const</span> <span class="token punctuation">{</span> defineConfig <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"@vue/cli-service"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"path"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 引入path模块</span><span class="token keyword">function</span> <span class="token function">resolve</span><span class="token punctuation">(</span>dir<span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">return</span> path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> dir<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token function">defineConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>  <span class="token operator">...</span>  chainWebpack<span class="token punctuation">:</span> <span class="token punctuation">(</span>config<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// 配置 vue-svg-loader</span>    config<span class="token punctuation">.</span>module<span class="token punctuation">.</span><span class="token function">rule</span><span class="token punctuation">(</span><span class="token string">"svg"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>exclude<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">"src/icons"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    config<span class="token punctuation">.</span>module      <span class="token punctuation">.</span><span class="token function">rule</span><span class="token punctuation">(</span><span class="token string">"icons"</span><span class="token punctuation">)</span>      <span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token regex">/\.svg$/</span><span class="token punctuation">)</span>      <span class="token punctuation">.</span>include<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">"src/icons"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>      <span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span>      <span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token string">"svg-sprite-loader"</span><span class="token punctuation">)</span>      <span class="token punctuation">.</span><span class="token function">loader</span><span class="token punctuation">(</span><span class="token string">"svg-sprite-loader"</span><span class="token punctuation">)</span>      <span class="token punctuation">.</span><span class="token function">options</span><span class="token punctuation">(</span><span class="token punctuation">{</span>        symbolId<span class="token punctuation">:</span> <span class="token string">"icon-[name]"</span><span class="token punctuation">,</span>      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> vue2 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      
        <title>python PCL LAS Open3D点云</title>
      
      <link href="/2023/03/18/python%20PCL%20LAS%20Open3D%E7%82%B9%E4%BA%91/"/>
      <url>/2023/03/18/python%20PCL%20LAS%20Open3D%E7%82%B9%E4%BA%91/</url>
      
        <content type="html"><![CDATA[<p>VS2019+PCL+LAS点云学习</p><h2 id="点云安装"><a href="#点云安装" class="headerlink" title="点云安装"></a>点云安装</h2><h3 id="安装教程"><a href="#安装教程" class="headerlink" title="安装教程"></a>安装教程</h3><ol><li><ol><li>CSDN教程等</li></ol></li><li><ol><li><p>1.1 【python3.6】python安装PCL（适用命令行或pycham中）-PCL 1.12.1</p></li><li><p><a href="https://blog.csdn.net/weixin_44244190/article/details/124324121">https://blog.csdn.net/weixin_44244190/article/details/124324121</a></p></li></ol></li><li><p>1. </p></li><li><ol start="2"><li>部分教程</li></ol></li><li><ol><li><p>2.1 点云可视化：mayavi、matplotlib、CloudCompare</p></li><li><p><a href="https://blog.csdn.net/suiyingy/article/details/124015667">https://blog.csdn.net/suiyingy/article/details/124015667</a></p></li></ol></li><li><ol><li><p>2.2 点云数据常用处理：数据集增强（仿射变换、添加噪声、下采样、数据标准化）</p></li><li><p><a href="https://blog.csdn.net/taifyang/article/details/124365265">https://blog.csdn.net/taifyang/article/details/124365265</a></p></li></ol></li><li><ol><li><p>2.3 Python点云数据处理</p></li><li><p><a href="https://www.zhihu.com/column/c_1349368779659575296?utm_id=0">https://www.zhihu.com/column/c_1349368779659575296?utm_id=0</a></p></li></ol></li><li><ol><li><p>2.4【点云无损压缩】python-pcl：点云las、laz文件的读取、写入、压缩</p></li><li><p><a href="https://blog.csdn.net/qq_40985985/article/details/105784220">https://blog.csdn.net/qq_40985985/article/details/105784220</a></p></li></ol></li><li><ol><li></li></ol></li></ol><h2 id="点云入门"><a href="#点云入门" class="headerlink" title="点云入门"></a>点云入门</h2><h3 id="功能示例代码段"><a href="#功能示例代码段" class="headerlink" title="功能示例代码段"></a>功能示例代码段</h3><ol><li>读取点云及基本信息</li></ol><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">readlas</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">with</span> laspy<span class="token punctuation">.</span>open<span class="token punctuation">(</span><span class="token string">'./data/10层3号切片抽稀.las'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> fh<span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'Points from Header:'</span><span class="token punctuation">,</span> fh<span class="token punctuation">.</span>header<span class="token punctuation">.</span>point_count<span class="token punctuation">)</span>        las <span class="token operator">=</span> fh<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>las<span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'Points from data:'</span><span class="token punctuation">,</span> len<span class="token punctuation">(</span>las<span class="token punctuation">.</span>points<span class="token punctuation">)</span><span class="token punctuation">)</span>        ground_pts <span class="token operator">=</span> las<span class="token punctuation">.</span>classification <span class="token operator">==</span> <span class="token number">2</span>        bins<span class="token punctuation">,</span> counts <span class="token operator">=</span> np<span class="token punctuation">.</span>unique<span class="token punctuation">(</span>las<span class="token punctuation">.</span>return_number<span class="token punctuation">[</span>ground_pts<span class="token punctuation">]</span><span class="token punctuation">,</span> return_counts<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'Ground Point Return Number distribution:'</span><span class="token punctuation">)</span>        <span class="token keyword">for</span> r<span class="token punctuation">,</span> c <span class="token keyword">in</span> zip<span class="token punctuation">(</span>bins<span class="token punctuation">,</span> counts<span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'{}:{}'</span><span class="token punctuation">.</span>format<span class="token punctuation">(</span>r<span class="token punctuation">,</span> c<span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'min: '</span><span class="token punctuation">,</span> fh<span class="token punctuation">.</span>header<span class="token punctuation">.</span>min<span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># x、y、z 的最小值</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'max: '</span><span class="token punctuation">,</span> fh<span class="token punctuation">.</span>header<span class="token punctuation">.</span>max<span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># x、y、z 的最大值</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>np<span class="token punctuation">.</span>array<span class="token punctuation">(</span>las<span class="token punctuation">.</span>xyz<span class="token punctuation">)</span><span class="token punctuation">)</span>Points <span class="token keyword">from</span> Header<span class="token punctuation">:</span> <span class="token number">57185</span><span class="token operator">&lt;</span>LasData<span class="token punctuation">(</span><span class="token number">1.2</span><span class="token punctuation">,</span> point fmt<span class="token punctuation">:</span> <span class="token operator">&lt;</span>PointFormat<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">0</span> bytes of extra dims<span class="token punctuation">)</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token number">57185</span> points<span class="token punctuation">,</span> <span class="token number">2</span> vlrs<span class="token punctuation">)</span><span class="token operator">></span>Points <span class="token keyword">from</span> data<span class="token punctuation">:</span> <span class="token number">57185</span>Ground Point Return Number distribution<span class="token punctuation">:</span>min<span class="token punctuation">:</span>  <span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">3.79119968</span> <span class="token operator">-</span><span class="token number">6.34900093</span> <span class="token operator">-</span><span class="token number">0.05</span>      <span class="token punctuation">]</span>max<span class="token punctuation">:</span>  <span class="token punctuation">[</span> <span class="token number">9.53839999</span> <span class="token number">12.90089989</span>  <span class="token number">0.05</span>      <span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="2"><li>点云格式转换：las-&gt;pcd</li></ol><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 适用于laspy&lt;2.0.0的版本</span><span class="token keyword">def</span> <span class="token function">getCloud</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    file <span class="token operator">=</span> r<span class="token string">"./data/10层3号切片抽稀.las"</span>    f <span class="token operator">=</span> File<span class="token punctuation">(</span>file<span class="token punctuation">,</span> mode<span class="token operator">=</span><span class="token string">'r'</span><span class="token punctuation">)</span>    inFile <span class="token operator">=</span> np<span class="token punctuation">.</span>vstack<span class="token punctuation">(</span><span class="token punctuation">(</span>f<span class="token punctuation">.</span>x<span class="token punctuation">,</span> f<span class="token punctuation">.</span>y<span class="token punctuation">,</span> f<span class="token punctuation">.</span>z<span class="token punctuation">,</span> f<span class="token punctuation">.</span>intensity<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>transpose<span class="token punctuation">(</span><span class="token punctuation">)</span>    cloud <span class="token operator">=</span> pcl<span class="token punctuation">.</span>PointCloud_PointXYZI<span class="token punctuation">(</span><span class="token punctuation">)</span>    cloud<span class="token punctuation">.</span>from_array<span class="token punctuation">(</span>np<span class="token punctuation">.</span>array<span class="token punctuation">(</span>inFile<span class="token punctuation">,</span> dtype<span class="token operator">=</span>np<span class="token punctuation">.</span>float32<span class="token punctuation">)</span><span class="token punctuation">)</span>    f<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> cloud<span class="token comment" spellcheck="true"># 保存为pcd文件</span><span class="token keyword">def</span> <span class="token function">save_pcd</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    end1 <span class="token operator">=</span> time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span>    cloud <span class="token operator">=</span> getCloud<span class="token punctuation">(</span><span class="token punctuation">)</span>    pcl<span class="token punctuation">.</span>save<span class="token punctuation">(</span>cloud<span class="token punctuation">,</span> r<span class="token string">"./data/test.pcd"</span><span class="token punctuation">)</span>    end2 <span class="token operator">=</span> time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"las2pcd 耗时:%.2f秒"</span> <span class="token operator">%</span> <span class="token punctuation">(</span>end2 <span class="token operator">-</span> end1<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'-------endl----------'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="知识点"><a href="#知识点" class="headerlink" title="知识点"></a>知识点</h3><h3 id="报错"><a href="#报错" class="headerlink" title="报错"></a>报错</h3>]]></content>
      
      
      <categories>
          
          <category> PCL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      
        <title>var、let、const异同点及区分</title>
      
      <link href="/2022/08/16/var%E3%80%81let%E3%80%81const%E5%BC%82%E5%90%8C%E7%82%B9%E5%8F%8A%E5%8C%BA%E5%88%86/"/>
      <url>/2022/08/16/var%E3%80%81let%E3%80%81const%E5%BC%82%E5%90%8C%E7%82%B9%E5%8F%8A%E5%8C%BA%E5%88%86/</url>
      
        <content type="html"><![CDATA[<p>JavaScript——var、let、const异同点及区分</p><p>相同点：三者皆可声明变量</p><p>区分：</p><div align=center><img src="https://raw.githubusercontent.com/FallonXC/blogImg/main/image-20231012110226116.png" width="700"></div><h3 id="循环中let和var声明的循环变量的区别"><a href="#循环中let和var声明的循环变量的区别" class="headerlink" title="循环中let和var声明的循环变量的区别"></a>循环中let和var声明的循环变量的区别</h3><h4 id="事件的绑定"><a href="#事件的绑定" class="headerlink" title="事件的绑定"></a>事件的绑定</h4><p>通过for循环给标签绑定事件，也就是一打开执行界面，事件绑定就结束了，也就是 循环已经结束了，也就是触发事件时循环已经结束了。</p><h4 id="循环变量存储的数据数值"><a href="#循环变量存储的数据数值" class="headerlink" title="循环变量存储的数据数值"></a>循环变量存储的数据数值</h4><ul><li>var声明的循环变量</li></ul><p>在整个循环变量过程中只定义了一个循环变量i，每次循环都对这一个循环变量i进行重复赋值，也就是之后的循环变量数值会覆盖之前的循环变量数值，当循环结束后只有一个循环变量i，存储的是最终的循环变量数值。</p><ul><li>let声明的循环变量</li></ul><p>在整个循环过程中每次循环都相当于触发执行了一个{   }，每一个{   }对于let定义的变量就是一个独立的作用域，也就是每次循环let声明的循环变量都是一个人独立作用域中的循环变量，每一次循环中循环变量都会存储不同的数据数值，互相之间不会影响，不会覆盖，也就是每次循环let声明的循环变量都相当于是一个独立的变量，不会覆盖之前的数据数值。</p><p>示例代码：</p><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>我是第一个li<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>我是第二个li<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>我是第三个li<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>我是第四个li<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>我是第五个li<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">    <span class="token comment" spellcheck="true">// 给 li 绑定事件 点击 li标签 弹出 索引下标</span>    <span class="token comment" spellcheck="true">// 获取标签对象</span>    <span class="token keyword">const</span> oLis <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelectorAll</span><span class="token punctuation">(</span><span class="token string">'ul>li'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 通过 for循环 给 li标签 绑定事件</span>    <span class="token keyword">for</span><span class="token punctuation">(</span> <span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span> <span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> oLis<span class="token punctuation">.</span>length <span class="token operator">-</span><span class="token number">1</span> <span class="token punctuation">;</span> i<span class="token operator">++</span> <span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// i 是 索引下标 oLis[i] 是 li标签对象</span>        oLis<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span> <span class="token string">'click'</span> <span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">// 点击时输出索引下标</span>            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span> <span class="token template-string"><span class="token string">`我是var循环的i </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>i<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">`</span></span> <span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span>    <span class="token punctuation">}</span>    <span class="token keyword">for</span><span class="token punctuation">(</span> <span class="token keyword">let</span> j <span class="token operator">=</span> <span class="token number">0</span> <span class="token punctuation">;</span> j <span class="token operator">&lt;=</span> oLis<span class="token punctuation">.</span>length <span class="token operator">-</span><span class="token number">1</span> <span class="token punctuation">;</span> j<span class="token operator">++</span> <span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// i 是 索引下标 oLis[i] 是 li标签对象</span>        oLis<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span> <span class="token string">'click'</span> <span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">// 点击时输出索引下标</span>            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span> <span class="token template-string"><span class="token string">`我是let循环的i </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>j<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">`</span></span> <span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span>    <span class="token punctuation">}</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>结果输出：</p><div align=center><img src="https://raw.githubusercontent.com/FallonXC/blogImg/main/1660652462283-d0558ede-c070-45ec-bc35-3eb0c804f320.gif" width="700"></div>]]></content>
      
      
      <categories>
          
          <category> javascript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>